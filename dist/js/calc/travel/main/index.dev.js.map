{"version":3,"sources":["webpack:///./node_modules/moment/locale sync [/\\\\](ru(\\.js)","webpack:///./src/calcs/common/classes/sms-manager.ts","webpack:///./src/calcs/common/components/calc-card/index.less","webpack:///./src/calcs/common/components/calc-card/index.tsx","webpack:///./src/calcs/common/components/check-cost/check-cost-for-small-screens/index.less","webpack:///./src/calcs/common/components/check-cost/check-cost-for-small-screens/index.tsx","webpack:///./src/calcs/common/components/check-cost/index.less","webpack:///./src/calcs/common/components/check-cost/index.tsx","webpack:///./src/calcs/common/components/check-wrapper/index.less","webpack:///./src/calcs/common/components/check-wrapper/index.tsx","webpack:///./src/calcs/common/components/header/index.less","webpack:///./src/calcs/common/components/header/index.tsx","webpack:///./src/calcs/common/components/page-after-payment/index.tsx","webpack:///./src/calcs/common/components/phone-checker/index.less","webpack:///./src/calcs/common/components/phone-checker/index.tsx","webpack:///./src/calcs/common/components/question-about-euroins/index.tsx","webpack:///./src/calcs/common/components/step/index.less","webpack:///./src/calcs/common/components/step/index.tsx","webpack:///./src/calcs/common/constants/doc-urls.ts","webpack:///./src/calcs/common/constants/index.ts","webpack:///./src/calcs/common/helpers/add-test-payment.ts","webpack:///./src/calcs/common/helpers/bonusesSystemUsed.ts","webpack:///./src/calcs/common/helpers/get-ym-client-id.ts","webpack:///./src/calcs/common/hooks/use-steps.ts","webpack:///./src/calcs/travel/main/classes/api.ts","webpack:///./src/calcs/travel/main/classes/extractor.ts","webpack:///./src/calcs/travel/main/classes/validator.ts","webpack:///./src/calcs/travel/main/components/agreement-with-protection-policy/index.tsx","webpack:///./src/calcs/travel/main/components/agreement-with-rules/index.less","webpack:///./src/calcs/travel/main/components/agreement-with-rules/index.tsx","webpack:///./src/calcs/travel/main/components/app/index.less","webpack:///./src/calcs/travel/main/components/app/index.tsx","webpack:///./src/calcs/travel/main/components/assistance-selection/index.less","webpack:///./src/calcs/travel/main/components/assistance-selection/index.tsx","webpack:///./src/calcs/travel/main/components/calculator/index.less","webpack:///./src/calcs/travel/main/components/calculator/index.tsx","webpack:///./src/calcs/travel/main/components/check/index.less","webpack:///./src/calcs/travel/main/components/check/index.tsx","webpack:///./src/calcs/travel/main/components/contacts/index.tsx","webpack:///./src/calcs/travel/main/components/control-block/index.less","webpack:///./src/calcs/travel/main/components/control-block/index.tsx","webpack:///./src/calcs/travel/main/components/country-selection/index.less","webpack:///./src/calcs/travel/main/components/country-selection/index.tsx","webpack:///./src/calcs/travel/main/components/covid-option/index.less","webpack:///./src/calcs/travel/main/components/covid-option/index.tsx","webpack:///./src/calcs/travel/main/components/currency-and-sums/index.tsx","webpack:///./src/calcs/travel/main/components/currency/index.tsx","webpack:///./src/calcs/travel/main/components/data-and-payment/index.tsx","webpack:///./src/calcs/travel/main/components/filling/index.tsx","webpack:///./src/calcs/travel/main/components/insurant-info/index.less","webpack:///./src/calcs/travel/main/components/insurant-info/index.tsx","webpack:///./src/calcs/travel/main/components/insurant-info/insured-is-insurant/index.tsx","webpack:///./src/calcs/travel/main/components/insured-birthdays/index.less","webpack:///./src/calcs/travel/main/components/insured-birthdays/index.tsx","webpack:///./src/calcs/travel/main/components/insureds-info/field-list/index.tsx","webpack:///./src/calcs/travel/main/components/insureds-info/index.tsx","webpack:///./src/calcs/travel/main/components/insureds-info/passport/index.tsx","webpack:///./src/calcs/travel/main/components/multiple-trip/index.tsx","webpack:///./src/calcs/travel/main/components/promocode-item/index.tsx","webpack:///./src/calcs/travel/main/components/promocode-or-bonuses-wrapper/index.tsx","webpack:///./src/calcs/travel/main/components/promocode/index.less","webpack:///./src/calcs/travel/main/components/promocode/index.tsx","webpack:///./src/calcs/travel/main/components/second-program/index.less","webpack:///./src/calcs/travel/main/components/second-program/index.tsx","webpack:///./src/calcs/travel/main/components/second-programs/index.tsx","webpack:///./src/calcs/travel/main/components/single-trip/index.less","webpack:///./src/calcs/travel/main/components/single-trip/index.tsx","webpack:///./src/calcs/travel/main/components/sport-selection/index.tsx","webpack:///./src/calcs/travel/main/components/sums/index.tsx","webpack:///./src/calcs/travel/main/components/trip-dates/index.less","webpack:///./src/calcs/travel/main/components/trip-dates/index.tsx","webpack:///./src/calcs/travel/main/components/trip-params/index.tsx","webpack:///./src/calcs/travel/main/components/trip-type/index.tsx","webpack:///./src/calcs/travel/main/constants/countries.ts","webpack:///./src/calcs/travel/main/constants/euro-only.ts","webpack:///./src/calcs/travel/main/constants/global-options.ts","webpack:///./src/calcs/travel/main/constants/ids.ts","webpack:///./src/calcs/travel/main/constants/index.ts","webpack:///./src/calcs/travel/main/constants/init-values.ts","webpack:///./src/calcs/travel/main/constants/labels.ts","webpack:///./src/calcs/travel/main/constants/promocodes.ts","webpack:///./src/calcs/travel/main/constants/second-programs.ts","webpack:///./src/calcs/travel/main/helpers/bonuses-system-used.ts","webpack:///./src/calcs/travel/main/helpers/reset-insured-is-insurant.ts","webpack:///./src/calcs/travel/main/hooks/use-controller.ts","webpack:///./src/calcs/travel/main/index.tsx","webpack:///./src/common/components/custom-form-components/date/index.less","webpack:///./src/common/components/custom-form-components/date/index.tsx","webpack:///./src/common/components/custom-form-components/phone/index.tsx","webpack:///./src/common/components/form-items/phone-item/index.tsx","webpack:///./src/common/components/passport-data/index.less","webpack:///./src/common/components/passport-data/index.tsx","webpack:///./src/common/helpers/console/log.ts","webpack:///./src/common/helpers/create-request-state.ts","webpack:///./src/common/helpers/divide-integer-by-space.ts","webpack:///./src/common/helpers/for-get-value-from-event/handle-input-only-english.ts","webpack:///./src/common/helpers/for-get-value-from-event/handle-input-only-russian.ts","webpack:///./src/common/helpers/merge-deep.ts","webpack:///./src/common/helpers/range-iterator.ts","webpack:///./src/common/helpers/validators/is-adult.ts","webpack:///./src/common/helpers/validators/required-true-checkbox.ts","webpack:///./src/common/hooks/use-url-params.ts","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":"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","file":"index.dev.js","sourcesContent":["var map = {\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive [/\\\\\\\\](ru(\\\\.js)?)$\";","const url = 'https://api.euro-ins.ru/sms/confirm_code/send',\r\n    method = 'POST'\r\n\r\ndeclare const ENV_IS_DEV: boolean\r\n\r\ninterface CallbackInterface {\r\n    (smsStatus: string): void\r\n}\r\n\r\ninterface DataForRequestInterface {\r\n    phone: string\r\n    message: string\r\n    code: string\r\n}\r\n\r\nexport default class SmsManager {\r\n    code: string\r\n    headers: Headers\r\n\r\n    constructor() {\r\n        // формируем код для отпраки его в смс\r\n        this.code = `${SmsManager.randomIntFromInterval(10000, 99999)}`\r\n        if (ENV_IS_DEV) console.log(this.code)\r\n        // создаем заголовки для общения с сервером\r\n        this.headers = new Headers()\r\n        this.headers.append('Content-Type', 'application/json')\r\n    }\r\n\r\n    /**\r\n     * В callback функцию передается текст о успехе/ошибке отправки смс\r\n     */\r\n    send(phone: string, code: string, callback: CallbackInterface) {\r\n        const formattedPhone = phone.replace(/\\D/g, '')\r\n        const apiData: DataForRequestInterface = {\r\n            code,\r\n            phone: formattedPhone,\r\n            message: this.code,\r\n        }\r\n\r\n        fetch(url, {\r\n            method,\r\n            headers: this.headers,\r\n            body: JSON.stringify(apiData),\r\n        })\r\n            .then(response => {\r\n                const {status} = response\r\n                if (status === 200) {\r\n                    callback('СМС доставлено!')\r\n                    return false\r\n                } else if (status === 400) {\r\n                    throw new Error('Бэк вернул 400, смс не доставлено')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                callback('Ошибка отправки смс!')\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    static randomIntFromInterval(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n}\r\n\r\n// OTk5OTk=\r\n\r\n// componentDidUpdate\r\n// актуальный телефон 89307475436\r\n// телефон для которого отправлена смс undefined\r\n// componentDidUpdate\r\n// актуальный телефон 89307475436\r\n// телефон для которого отправлена смс 89307475436\r\n// MTI3MzI=\r\n// send\r\n// {\"insType\":\"health\",\"task\":\"send\",\"pid\":0,\"name\":\"Фамилия Имя \",\"phone\":\"89307475436\",\"code\":\"MTI3MzI=\"}\r\n// response send sms  201840-1000585\r\n// check\r\n// response check sms  100\r\n// getTextByCode\r\n// check\r\n// response check sms  102\r\n// getTextByCode\r\n// check\r\n// response check sms  102\r\n// getTextByCode\r\n// check\r\n// response check sms  102\r\n// getTextByCode\r\n// check\r\n// response check sms  102\r\n// getTextByCode\r\n// check\r\n// response check sms  103\r\n// getTextByCode\r\n// smsInfo Сообщение доставлено!\r\n// componentDidUpdate\r\n// актуальный телефон 89307475436\r\n// телефон для которого отправлена смс 89307475436\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport './index.less'\r\n\r\ninterface CalcCardPropsInterface {\r\n    className?: string\r\n}\r\n\r\nconst CalcCard: FC<CalcCardPropsInterface> = ({className = '', children}) => (\r\n    <div className={`calc-card ${className}`}>{children}</div>\r\n)\r\n\r\nexport default CalcCard\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {DOMElement, FC, ReactNode, useEffect, useState} from 'react'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport Button from 'antd/lib/button'\r\nimport 'antd/lib/button/style'\r\nimport Affix from 'antd/lib/affix'\r\nimport 'antd/lib/affix/style'\r\nimport './index.less'\r\n\r\ninterface CheckCostForSmallScreensPropsInterface {\r\n    currentStep: number\r\n    costWithBonuses: ReactNode\r\n    costWithoutBonuses: ReactNode\r\n    rootNodeId: string\r\n    offsetBottom?: number\r\n    affixed?: boolean\r\n    onAffixStateChange: (state: boolean) => void\r\n    onPrevStepClick: () => void\r\n}\r\n\r\ntype OffsetBottomStateType = number | null\r\n\r\nconst fullScreenCalc = rootNode => {\r\n    const clientRect = rootNode.getBoundingClientRect()\r\n\r\n    return (\r\n        window.scrollY > rootNode.offsetTop &&\r\n        window.scrollY < rootNode.offsetTop + clientRect.height\r\n    )\r\n}\r\n\r\nconst CheckCostForSmallScreens: FC<CheckCostForSmallScreensPropsInterface> = ({\r\n    currentStep,\r\n    costWithBonuses,\r\n    costWithoutBonuses,\r\n    rootNodeId,\r\n    // offsetBottom,\r\n    // affixed,\r\n    onAffixStateChange,\r\n    onPrevStepClick,\r\n}) => {\r\n    const rootNode: any = document.getElementById(rootNodeId),\r\n        [offsetBottom, setOffsetBottom] = useState<OffsetBottomStateType>(\r\n            fullScreenCalc(rootNode) ? 0 : undefined\r\n        ),\r\n        [affixed, setAffixed] = useState<boolean>(false),\r\n        [affixHidden, setAffixHidden] = useState<boolean>(true)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            const offset = fullScreenCalc(rootNode) ? 0 : undefined\r\n            setOffsetBottom(offset)\r\n\r\n            if (!fullScreenCalc(rootNode)) setAffixHidden(true)\r\n            else setAffixHidden(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Affix\r\n            style={{display: affixHidden ? 'none' : 'block'}}\r\n            offsetBottom={offsetBottom}\r\n            className={`e-ccfss ${affixed ? ' e-ccfss_affixed' : ''}`}\r\n            onChange={setAffixed}\r\n        >\r\n            <Row align={'middle'}>\r\n                <Col sm={8} xs={8} className={'e-ccfss__prev-col'}>\r\n                    {currentStep > 0 && offsetBottom === 0 && (\r\n                        <Button type={'primary'} onClick={onPrevStepClick}>\r\n                            Назад\r\n                        </Button>\r\n                    )}\r\n                </Col>\r\n                <Col sm={16} xs={16} className={'e-ccfss__cost-col'}>\r\n                    <p className={'e-ccfss__cost'}>\r\n                        Общая стоимость страховки:\r\n                    </p>\r\n                    {costWithBonuses}\r\n                    <div\r\n                        style={{\r\n                            display: affixed ? 'none' : 'block',\r\n                        }}\r\n                    >\r\n                        {costWithoutBonuses}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Affix>\r\n    )\r\n}\r\n\r\nexport default CheckCostForSmallScreens\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo, useCallback} from 'react'\r\nimport './index.less'\r\nimport LoadingOutlined from '@ant-design/icons/lib/icons/LoadingOutlined'\r\nimport {FormInstance} from 'antd/lib/form'\r\nimport Form from 'antd/lib/form'\r\nimport {SCREEN_IS_SMALL} from '../../constants'\r\nimport CheckCostForSmallScreens from './check-cost-for-small-screens'\r\n\r\nconst {Item} = Form,\r\n    ID_PROMOCODE_OR_BONUSES = 'promocodeOrBonuses',\r\n    ID_BONUSES = 'bonuses'\r\n\r\ninterface CheckCostInterface {\r\n    currentStep: number\r\n    cost: number\r\n    defaultCost: string\r\n    loadingCost: boolean\r\n    bonusesSystemIsOn: boolean\r\n    rootNodeId: string\r\n    onPrevStepClick: () => void\r\n}\r\n\r\nconst CheckCost: FC<CheckCostInterface> = memo(\r\n    ({\r\n        currentStep,\r\n        cost,\r\n        defaultCost,\r\n        loadingCost,\r\n        rootNodeId,\r\n        bonusesSystemIsOn,\r\n        onPrevStepClick,\r\n    }) => {\r\n        const getCostWithBonuses = useCallback(\r\n                ({getFieldValue}: FormInstance) => {\r\n                    if (loadingCost)\r\n                        return (\r\n                            <LoadingOutlined\r\n                                className={'e-check-cost__loading'}\r\n                            />\r\n                        )\r\n\r\n                    /*\n                        Если система баллов включена и\n                        цена рассчитана и\n                        в калькуляторе выбраны баллы а не промокод -\n                        вычитаем из цены баллы\n                     */\r\n                    const bonusesSelected =\r\n                        getFieldValue(ID_PROMOCODE_OR_BONUSES) === 'bonuses'\r\n\r\n                    if (bonusesSystemIsOn && cost !== 0 && bonusesSelected) {\r\n                        const bonuses = getFieldValue(ID_BONUSES),\r\n                            costWithBonuses = cost - bonuses\r\n\r\n                        return (\r\n                            <span>\r\n                                {Math.floor(costWithBonuses * 100) / 100} руб.\r\n                            </span>\r\n                        )\r\n                    }\r\n\r\n                    /*\n                    Просто выводим стоимость, если система баллов не включена\n                 */\r\n                    return <span>{cost || defaultCost} руб.</span>\r\n                },\r\n                [cost, loadingCost, bonusesSystemIsOn]\r\n            ),\r\n            getCostWithoutBonuses = useCallback(\r\n                ({getFieldValue}: FormInstance) => {\r\n                    const bonusesSelected =\r\n                            getFieldValue(ID_PROMOCODE_OR_BONUSES) ===\r\n                            'bonuses',\r\n                        bonuses = getFieldValue(ID_BONUSES)\r\n\r\n                    if (\r\n                        bonusesSystemIsOn &&\r\n                        cost !== 0 &&\r\n                        bonusesSelected &&\r\n                        bonuses !== 0\r\n                    ) {\r\n                        return (\r\n                            <p className={'e-cost-without-bonuses'}>\r\n                                <span\r\n                                    className={\r\n                                        'e-cost-without-bonuses__canceled'\r\n                                    }\r\n                                >\r\n                                    {cost} руб.\r\n                                </span>{' '}\r\n                                <span\r\n                                    className={'e-cost-without-bonuses__text'}\r\n                                >\r\n                                    без учета баллов\r\n                                </span>\r\n                            </p>\r\n                        )\r\n                    }\r\n\r\n                    return null\r\n                },\r\n                [cost, bonusesSystemIsOn]\r\n            )\r\n\r\n        return (\r\n            <Item shouldUpdate={true} noStyle>\r\n                {(form: FormInstance) => {\r\n                    const costWithBonuses = getCostWithBonuses(form),\r\n                        costWithoutBonuses = getCostWithoutBonuses(form)\r\n\r\n                    if (SCREEN_IS_SMALL)\r\n                        return (\r\n                            <CheckCostForSmallScreens\r\n                                currentStep={currentStep}\r\n                                costWithBonuses={costWithBonuses}\r\n                                costWithoutBonuses={costWithoutBonuses}\r\n                                offsetBottom={10}\r\n                                affixed={false}\r\n                                rootNodeId={rootNodeId}\r\n                                onAffixStateChange={state => {}}\r\n                                onPrevStepClick={() => {}}\r\n                            />\r\n                        )\r\n\r\n                    return (\r\n                        <>\r\n                            <p className={'e-check-cost__total-cost-label'}>\r\n                                Общая стоимость страховки:\r\n                            </p>\r\n                            <p className={'e-check-cost'}>{costWithBonuses}</p>\r\n                            {costWithoutBonuses}\r\n                        </>\r\n                    )\r\n                }}\r\n            </Item>\r\n        )\r\n    }\r\n)\r\n\r\nexport default CheckCost\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, useCallback, useEffect, useMemo, useState} from 'react'\r\nimport Affix from 'antd/lib/affix'\r\nimport 'antd/lib/affix/style'\r\nimport './index.less'\r\n\r\ninterface CheckWrapperPropsInterface {\r\n    rootNodeId: string\r\n    currentStep: number\r\n}\r\n\r\ninterface AffixStateInterface {\r\n    affixed: boolean\r\n}\r\n\r\nlet fixedResetPoint = 0\r\n\r\nconst CheckWrapper: FC<CheckWrapperPropsInterface> = ({\r\n    rootNodeId,\r\n    currentStep,\r\n    children,\r\n}) => {\r\n    const screenIsSmall = window.innerWidth < 768,\r\n        rootNode = useMemo(() => document.getElementById(rootNodeId), []),\r\n        [affix, setAffix] = useState<AffixStateInterface>({affixed: true}),\r\n        setFixedResetPoint = useCallback(() => {\r\n            const // Последний-нижний пиксель калькулятора\r\n                calcEndPX = rootNode.offsetTop + rootNode.clientHeight,\r\n                // Высота чека\r\n                checkHeight = document.getElementsByClassName('calc-check')[0]\r\n                    .clientHeight\r\n            // Точка сброса фиксированной позиции\r\n            fixedResetPoint = calcEndPX - checkHeight\r\n        }, []),\r\n        handleScroll = useCallback(() => {\r\n            // Если скрол прошел точку сброса, то стам соответствующий стейт\r\n            if (window.scrollY > fixedResetPoint) setAffix({affixed: false})\r\n            else\r\n                setAffix(affix => {\r\n                    if (!affix.affixed) return {affixed: true}\r\n                    else return affix\r\n                })\r\n        }, [])\r\n\r\n    useEffect(() => {\r\n        if (screenIsSmall) return\r\n        setFixedResetPoint()\r\n        window.addEventListener('scroll', handleScroll)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFixedResetPoint()\r\n    }, [currentStep])\r\n\r\n    // Если экран маленький, то рендерим обычно\r\n    if (screenIsSmall) return <div className={'calc-check'}>{children}</div>\r\n\r\n    // Если экран большой,\r\n    // то рендерим с функционалом фиксации при прокрутке\r\n    return (\r\n        <Affix className={affix.affixed ? '' : 'absolute-bottom'}>\r\n            <div className={'calc-check'}>{children}</div>\r\n        </Affix>\r\n    )\r\n}\r\n\r\nexport default CheckWrapper\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport Steps from 'antd/lib/steps'\r\nimport 'antd/lib/steps/style'\r\nimport './index.less'\r\n\r\ninterface CalcStepInterface {\r\n    name: string\r\n}\r\n\r\ninterface HeaderPropsInterface {\r\n    currentStep: number\r\n    calcSteps: CalcStepInterface[]\r\n}\r\n\r\nconst {Step} = Steps\r\n\r\nconst Header: FC<HeaderPropsInterface> = memo(({currentStep, calcSteps}) => {\r\n    return (\r\n        <div id={'calc-header'}>\r\n            <Steps current={currentStep} className={'calc-header__steps'}>\r\n                {calcSteps.map((step, i) => (\r\n                    <Step\r\n                        className={'calc-header__step'}\r\n                        title={step.name}\r\n                        key={i}\r\n                    />\r\n                ))}\r\n            </Steps>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Header\r\n","import * as React from 'react'\r\nimport {FC, ReactNode, useCallback, useEffect} from 'react'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport UrlParamsInterface from '../../types/url-params'\r\nimport Button from 'antd/lib/button'\r\nimport 'antd/lib/button/style'\r\n\r\nconst title = {\r\n    error: 'Ошибка оплаты!',\r\n    success: 'Оплата прошла успешно!',\r\n}\r\n\r\nconst content = {\r\n    error: (\r\n        <div>\r\n            <p>\r\n                Вы вернулись со страницы платежной системы, но оплата страхового\r\n                полиса не была сделана по независящим от нас причинам.\r\n            </p>\r\n            <p>\r\n                Оплата страхового полиса не была произведена. Для формирования\r\n                страхового полиса необходимо произвести его оплату.\r\n            </p>\r\n        </div>\r\n    ),\r\n    success: (\r\n        <div>\r\n            <p>\r\n                Вы вернулись со страницы платежной системы. Ваш страховой полис\r\n                успешно оплачен. В ближайшее время мы сформируем страховой полис\r\n                и отправим его на Вашу электронную почту в формате PDF (от 1 до\r\n                15 минут).\r\n            </p>\r\n            <p>\r\n                Если Вы не получили страховой полис, то проверьте папку почты\r\n                СПАМ или Нежелательная почта Если у Вас возникли проблемы, то\r\n                напишите нам на электронную почту epolis@euro-ins.ru. Спасибо,\r\n                что воспользовались услугами ООО РСО \"ЕВРОИНС\". Будем рады\r\n                видеть Вас снова на нашем сайте.\r\n            </p>\r\n        </div>\r\n    ),\r\n}\r\n\r\ninterface PageAfterPaymentPropsInterface {\r\n    params: UrlParamsInterface\r\n    rootNodeId: string\r\n    successContent?: ReactNode\r\n}\r\n\r\nconst PageAfterPayment: FC<PageAfterPaymentPropsInterface> = ({\r\n    params,\r\n    rootNodeId,\r\n    successContent,\r\n}) => {\r\n    const goToCalculator = useCallback(() => {\r\n        // @ts-ignore\r\n        window.location = window.location.origin + window.location.pathname\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (params.payment_status) {\r\n            const elem = document.getElementById(rootNodeId)\r\n            elem.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Row gutter={16} justify={'center'}>\r\n            <Col lg={14} md={23} sm={24}>\r\n                <h1>{title[params.payment_status]}</h1>\r\n            </Col>\r\n            <Col lg={14} md={23} sm={24}>\r\n                {content[params.payment_status]}\r\n                <br />\r\n                {params.payment_status === 'success' && successContent\r\n                    ? successContent\r\n                    : null}\r\n                <br />\r\n                <Button onClick={goToCalculator}>\r\n                    Вернуться в калькулятор\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PageAfterPayment\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {PureComponent} from 'react'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport SmsManager from '../../../common/classes/sms-manager'\r\nimport './index.less'\r\nimport CalcCard from '../calc-card'\r\n\r\nconst {Item} = Form\r\n\r\ninterface PhoneCheckerPropsInterface {\r\n    form: FormInstance\r\n    stepIsActive: boolean\r\n    phoneId: string | string[]\r\n    globalOptions: {code: string}\r\n}\r\n\r\ninterface PhoneCheckerStateInterface {\r\n    smsInfo: string\r\n    phone: number\r\n}\r\n\r\nexport default class PhoneChecker extends PureComponent<\r\n    PhoneCheckerPropsInterface,\r\n    PhoneCheckerStateInterface\r\n> {\r\n    codeForSms: string\r\n    sm: SmsManager\r\n    code: string\r\n\r\n    state = {\r\n        smsInfo: '',\r\n        phone: undefined,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.codeForSms = ''\r\n        this.sm = new SmsManager()\r\n        this.code = props.globalOptions.code as string\r\n    }\r\n\r\n    static defaultProps = {\r\n        phoneId: ['insurant', 'phone'],\r\n    }\r\n\r\n    /*\r\n     * Вызывается после перерендеринга (принимает prevProps, prevState)\r\n     */\r\n    componentDidUpdate() {\r\n        const {stepIsActive, phoneId} = this.props\r\n\r\n        // если страница неактивна выходим\r\n        if (stepIsActive === false) return\r\n\r\n        const {getFieldValue} = this.props.form\r\n        // извлекаем текущий введенный номер\r\n        const insurant = {\r\n            phone: getFieldValue(phoneId),\r\n        }\r\n\r\n        // сравниваем текущий введеный номер и тот для которого отправленна смс\r\n        // если они различаются то мы заного отправляем смс\r\n        if (insurant.phone !== this.state.phone) {\r\n            this.setState(\r\n                {\r\n                    smsInfo: '',\r\n                    phone: insurant.phone,\r\n                },\r\n                () => {\r\n                    // извлекаем код из смс\r\n                    this.codeForSms = this.sm.code\r\n\r\n                    // отправляем смс, передаем callback в который будет передана информация о доставке смс\r\n                    this.sm.send(insurant.phone, this.code, smsInfo => {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            smsInfo,\r\n                        })\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCodeChange = () => {\r\n        this.props.form.validateFields(['smsCode']).then()\r\n    }\r\n\r\n    smsCodeValidator = (r, v, c) => {\r\n        if (`${v}`.length === 5) {\r\n            if (this.codeForSms !== v) {\r\n                r.message = 'Введен неверный код!'\r\n                c(new Error('compare code false'))\r\n            }\r\n            c()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {form, phoneId} = this.props,\r\n            {getFieldValue} = form\r\n\r\n        return (\r\n            <CalcCard>\r\n                <h2>Подтверждение номера телефона</h2>\r\n\r\n                <p>\r\n                    На номер <b>{getFieldValue(phoneId)}</b> был выслан код,\r\n                    который подтверждает Ваше согласие на заключение договора\r\n                    страхования и оплату страховой премии. Пожалуйста, введите\r\n                    его в нижнюю ячейку. Обратите внимание, что оплату в банке\r\n                    необходимо сделать в течение 10 минут. Если Вы не успели\r\n                    сделать оплату в срок, то ее можно сделать повторно.\r\n                </p>\r\n\r\n                <Row justify={'center'}>\r\n                    <Col>\r\n                        <Item\r\n                            name={'smsCode'}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Введите код из смс',\r\n                                    validator: this.smsCodeValidator,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                size={'large'}\r\n                                placeholder='Введите код из смс'\r\n                                onChange={this.handleCodeChange}\r\n                            />\r\n                        </Item>\r\n                    </Col>\r\n\r\n                    <Col sm={24} className={'calc-phone-checker-sms-info'}>\r\n                        {this.state.smsInfo}\r\n                    </Col>\r\n                </Row>\r\n            </CalcCard>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react'\r\nimport {FC, useCallback, useState} from 'react'\r\nimport Spin from 'antd/lib/spin'\r\nimport 'antd/lib/spin/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\nimport Alert from 'antd/lib/alert'\r\nimport 'antd/lib/alert/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport Button from 'antd/lib/button'\r\nimport 'antd/lib/button/style'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport {useForm} from 'antd/lib/form/Form'\r\nimport UrlParamsInterface from '../../types/url-params'\r\nimport {\r\n    createErrorState,\r\n    createInitialState,\r\n    createStartedState,\r\n    createSuccessState,\r\n} from '../../../../common/helpers/create-request-state'\r\nimport AnswerCreationInfoType from '../../types/state/answer-creation-info'\r\nimport {STANDART_ITEM_RULES} from '../../constants'\r\nimport AnswerCreationInfoInterface from '../../types/models/answer-creation-info'\r\nimport CreateAnswerRequestInterface from '../../types/requests/create-answer'\r\n\r\nconst {Item} = Form,\r\n    {Group} = Radio,\r\n    answers = [\r\n        'От друзей',\r\n        'Из facebook',\r\n        'Из instagram',\r\n        'Из поисковика (Яндекс, Google)',\r\n        'Я ваш партнер',\r\n        'Другое',\r\n    ],\r\n    ID_ANSWER = 'answer',\r\n    ID_OTHER_ANSWER = 'otherAnswer',\r\n    method = 'POST',\r\n    headers = new Headers([['Content-Type', 'application/json']]),\r\n    url = 'https://api.euro-ins.ru/referrer/add'\r\n\r\ninterface QuestionAboutEuroinsPropsInterface {\r\n    params: UrlParamsInterface\r\n}\r\n\r\nconst initState = createInitialState<AnswerCreationInfoInterface>()\r\n\r\nconst QuestionAboutEuroins: FC<QuestionAboutEuroinsPropsInterface> = ({\r\n    params,\r\n}) => {\r\n    const [form] = useForm(),\r\n        [answerCreation, setAnswerCreation] = useState<AnswerCreationInfoType>(\r\n            initState\r\n        ),\r\n        handleSendClick = useCallback(async e => {\r\n            e.preventDefault()\r\n\r\n            try {\r\n                setAnswerCreation(createStartedState())\r\n\r\n                await form.validateFields([ID_ANSWER, ID_OTHER_ANSWER])\r\n\r\n                const answerValue = form.getFieldValue(ID_ANSWER),\r\n                    otherAnswerValue = form.getFieldValue(ID_OTHER_ANSWER),\r\n                    data: CreateAnswerRequestInterface = {\r\n                        policyId: +params.policy_id,\r\n                        policyType: params.policy_type,\r\n                        referrer:\r\n                            answerValue === 'Другое'\r\n                                ? otherAnswerValue\r\n                                : answerValue,\r\n                    },\r\n                    response = await fetch(url, {\r\n                        method,\r\n                        headers,\r\n                        body: JSON.stringify(data),\r\n                    })\r\n\r\n                if (response.status !== 200)\r\n                    setAnswerCreation(\r\n                        createErrorState(['Неверный статус ответа сервера'])\r\n                    )\r\n\r\n                setAnswerCreation(createSuccessState('Успешно'))\r\n            } catch (e) {\r\n                setAnswerCreation(createErrorState([e.message]))\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <Form\r\n            className={'e-calc'}\r\n            layout={'vertical'}\r\n            form={form}\r\n            name={'about'}\r\n        >\r\n            <h2>Как Вы узнали о ЕВРОИНС?</h2>\r\n\r\n            <Spin\r\n                tip={'Отправка ответа...'}\r\n                spinning={answerCreation.requestStatus === 'started'}\r\n            >\r\n                {answerCreation.requestStatus === 'success' ? (\r\n                    <>\r\n                        Ответ отправлен. Ваш ответ:{' '}\r\n                        <b>\r\n                            {form.getFieldValue(ID_ANSWER) === 'Другое'\r\n                                ? form.getFieldValue(ID_OTHER_ANSWER)\r\n                                : form.getFieldValue(ID_ANSWER)}\r\n                        </b>\r\n                        .\r\n                    </>\r\n                ) : answerCreation.requestStatus === 'error' ? (\r\n                    <Alert\r\n                        type={'warning'}\r\n                        message={\r\n                            'Ошибка отправки ответа. Пожалуйста, сообщите в службу тенической поддержки.'\r\n                        }\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <Item\r\n                            name={'answer'}\r\n                            rules={STANDART_ITEM_RULES}\r\n                            required\r\n                        >\r\n                            <Group>\r\n                                {answers.map((answer, i) => (\r\n                                    <Radio value={answer} key={i}>\r\n                                        {answer}\r\n                                    </Radio>\r\n                                ))}\r\n                            </Group>\r\n                        </Item>\r\n                        <Item shouldUpdate={true}>\r\n                            {form => {\r\n                                const answerValue = form.getFieldValue(\r\n                                    ID_ANSWER\r\n                                )\r\n\r\n                                if (answerValue !== 'Другое') return null\r\n\r\n                                return (\r\n                                    <Item\r\n                                        name={ID_OTHER_ANSWER}\r\n                                        label={'Оставьте комментарий'}\r\n                                        rules={STANDART_ITEM_RULES}\r\n                                        required\r\n                                    >\r\n                                        <Input size={'large'} />\r\n                                    </Item>\r\n                                )\r\n                            }}\r\n                        </Item>\r\n                        <Button onClick={handleSendClick} type={'primary'}>\r\n                            Отправить ответ\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Spin>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default QuestionAboutEuroins\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport './index.less'\r\n\r\ninterface StepPropsInterface {\r\n    hidden?: boolean\r\n}\r\n\r\nconst Step: FC<StepPropsInterface> = ({hidden = false, children}) => {\r\n    return <div className={hidden ? 'hidden' : null}>{children}</div>\r\n}\r\n\r\nexport default Step\r\n","export const URL_AGREEMENT_OF_PERSONAL_DATA =\r\n    'https://euro-ins.ru/calc/files/soglasie-na-obrabotku-pd.pdf'\r\n\r\nexport const URL_POLICY_PERSONAL_DATA =\r\n    'https://euro-ins.ru/calc/files/personal_data.pdf'\r\n","export const SCREEN_IS_SMALL = window.innerWidth < 768\r\n\r\nexport const OUTPUT_DATE_FORMAT = 'DD.MM.YYYY'\r\nexport const REQUEST_DATE_FORMAT = 'YYYY-MM-DD'\r\n\r\nexport const STANDART_ITEM_RULES = [{required: true, message: 'Введите данные'}]\r\nexport const DATE_PICKER_PLACEHOLDER = '__.__.____'\r\n\r\n// имя объекта window['yaCounter21173200'] для основного сайта euro-ins.ru\r\nexport const NAME_YM_EUROINS = 'yaCounter21173200'\r\n\r\nexport const DOMEN = ENV_IS_DEV\r\n    ? 'http://api.euro-ins.lh'\r\n    : 'http://api.euro-ins.ru'\r\n","import notification from 'antd/lib/notification'\r\nimport 'antd/lib/notification/style'\r\n\r\ninterface GlobalOptionsInterface {\r\n    dinamyc: {\r\n        test: boolean\r\n    }\r\n}\r\n\r\nconst addTestPayment = (globalOptions: GlobalOptionsInterface) => {\r\n    const codes = ['KeyE', 'KeyP', 'KeyT'],\r\n        pressed = new Set()\r\n\r\n    document.addEventListener('keydown', e => {\r\n        pressed.add(e.code)\r\n        for (const code of codes) if (!pressed.has(code)) return\r\n        pressed.clear()\r\n        globalOptions.dinamyc.test = !globalOptions.dinamyc.test\r\n        if (globalOptions.dinamyc.test)\r\n            notification.info({\r\n                message: 'Включена тестовая оплата!',\r\n                description:\r\n                    'Если вы сделали это случайно, то зажмите E+T+P (на английской раскладке).',\r\n                duration: 6,\r\n            })\r\n        else notification.info({message: 'Тестовая оплата выключена!'})\r\n    })\r\n\r\n    document.addEventListener('keyup', e => {\r\n        pressed.delete(e.code)\r\n    })\r\n}\r\n\r\nexport default addTestPayment\r\n","export default function bonusesSystemUsed(globalOptions: any) {\r\n    return (\r\n        (window.location.hostname === 'lk.euro-ins.ru' ||\r\n            window.location.hostname === 'euro-ins.lh') &&\r\n        globalOptions.bonuses !== undefined &&\r\n        globalOptions.clientIsn !== undefined\r\n    )\r\n}\r\n","declare const window: any\r\n\r\nconst getYmClientID = NAME_YM => {\r\n    if (window[NAME_YM] === undefined) return\r\n    return window[NAME_YM].getClientID && window[NAME_YM].getClientID()\r\n}\r\n\r\nexport default getYmClientID\r\n","import {useCallback, useState} from 'react'\r\n\r\nconst useSteps = () => {\r\n    const [currentStep, setCurrentStep] = useState<number>(0),\r\n        nextStep = useCallback(() => {\r\n            setCurrentStep(prState => prState + 1)\r\n        }, []),\r\n        prevStep = useCallback(() => {\r\n            setCurrentStep(prState => prState - 1)\r\n        }, [])\r\n\r\n    return {\r\n        currentStep,\r\n        nextStep,\r\n        prevStep,\r\n    }\r\n}\r\n\r\nexport default useSteps\r\n","import GetCostRequestInterface from '../types/requests/get-cost'\r\nimport CostInfoInterface from '../types/models/cost-info'\r\nimport {\r\n    HEADERS,\r\n    POST,\r\n    URL_CREATE_POLICY,\r\n    URL_GET_ASSISTANCES,\r\n    URL_GET_COST,\r\n    URL_GET_PAY_URL,\r\n    URL_GET_SPORTS,\r\n} from '../constants'\r\nimport AssistancesType from '../types/models/assistance'\r\nimport {SportsType} from '../types/models/sport'\r\nimport CreatePolicyRequestInterface from '../types/requests/create-policy'\r\nimport PolicyInfoInterface from '../types/models/policy-info'\r\nimport GetPaymentLinkRequestInterface from '../types/requests/get-payment-link'\r\nimport PaymentLinkInfoInterface from '../types/models/payment-link-info'\r\n\r\nconst getInitFetch = data => ({\r\n    method: POST,\r\n    headers: HEADERS,\r\n    body: JSON.stringify(data),\r\n})\r\n\r\ninterface ErrorInterface {\r\n    errors: string[]\r\n}\r\n\r\nclass Api {\r\n    static async getCost(\r\n        data: GetCostRequestInterface\r\n    ): Promise<ErrorInterface | CostInfoInterface> {\r\n        try {\r\n            const response: Response = await fetch(\r\n                URL_GET_COST,\r\n                getInitFetch(data)\r\n            )\r\n            if (response.status !== 200)\r\n                throw new Error('Ошибка запроса стоимости.')\r\n            return await response.json()\r\n        } catch (e) {\r\n            return {errors: [e.message]}\r\n        }\r\n    }\r\n\r\n    static async createPolicy(\r\n        data: CreatePolicyRequestInterface\r\n    ): Promise<ErrorInterface | PolicyInfoInterface> {\r\n        try {\r\n            const response: Response = await fetch(\r\n                URL_CREATE_POLICY,\r\n                getInitFetch(data)\r\n            )\r\n            if (response.status === 400) {\r\n                const responseData: ErrorInterface = await response.json()\r\n                throw new Error(\r\n                    JSON.stringify(responseData.errors) ||\r\n                        'Ошибка создания полиса.'\r\n                )\r\n            }\r\n            if (response.status !== 200)\r\n                throw new Error('Ошибка создания полиса.')\r\n            return await response.json()\r\n        } catch (e) {\r\n            return {errors: [e.message]}\r\n        }\r\n    }\r\n\r\n    static async getPaymentLink(\r\n        data: GetPaymentLinkRequestInterface\r\n    ): Promise<ErrorInterface | PaymentLinkInfoInterface> {\r\n        try {\r\n            const response: Response = await fetch(\r\n                URL_GET_PAY_URL,\r\n                getInitFetch(data)\r\n            )\r\n            if (response.status !== 200)\r\n                throw new Error('Ошибка получения ссылки на оплату.')\r\n            return await response.json()\r\n        } catch (e) {\r\n            return {errors: [e.message]}\r\n        }\r\n    }\r\n\r\n    static async getAssistances(): Promise<ErrorInterface | AssistancesType> {\r\n        try {\r\n            const response: Response = await fetch(URL_GET_ASSISTANCES)\r\n            if (response.status !== 200)\r\n                return {errors: ['Ошибка загрузки ассистансов.']}\r\n            return await response.json()\r\n        } catch (e) {\r\n            return {errors: [e.message]}\r\n        }\r\n    }\r\n\r\n    static async getSports(): Promise<ErrorInterface | SportsType> {\r\n        try {\r\n            const response: Response = await fetch(URL_GET_SPORTS)\r\n            if (response.status !== 200)\r\n                return {errors: ['Ошибка загрузки видов спорта.']}\r\n            return await response.json()\r\n        } catch (e) {\r\n            return {errors: [e.message]}\r\n        }\r\n    }\r\n}\r\n\r\nexport default Api\r\n","import {FormInstance} from 'antd/lib/form'\r\nimport GetCostRequestInterface, {\r\n    RiskInterface,\r\n} from '../types/requests/get-cost'\r\nimport GlobalOptionsInterface from '../types/global-options'\r\nimport IDS from '../constants/ids'\r\nimport {NAME_YM_EUROINS, REQUEST_DATE_FORMAT} from '../../../common/constants'\r\nimport PROMOCODES from '../constants/promocodes'\r\nimport CreatePolicyRequestInterface from '../types/requests/create-policy'\r\nimport getYmClientID from '../../../common/helpers/get-ym-client-id'\r\nimport * as moment from 'moment'\r\nimport bonusesSystemUsed from '../../../common/helpers/bonusesSystemUsed'\r\n\r\ndeclare const ENV_IS_DEV: boolean\r\n\r\n/*\r\n    В функциях этого класса мы не проверяем\r\n    на наличие корректных значений полей,\r\n    это задача валидатора.\r\n    Мы просто берем значения из полей.\r\n */\r\nclass Extractor {\r\n    private form: FormInstance\r\n    private globalOptions: GlobalOptionsInterface\r\n    private bonusesSystemIsOn: boolean\r\n\r\n    setForm = form => (this.form = form)\r\n    setGlobalOptions = globalOptions => (this.globalOptions = globalOptions)\r\n    setBonusesSystemIsOn = bonusesSystemIsOn =>\r\n        (this.bonusesSystemIsOn = bonusesSystemIsOn)\r\n\r\n    formatRisks = (secondPrograms: {\r\n        [key: string]: number\r\n    }): RiskInterface[] => {\r\n        const risks: RiskInterface[] = []\r\n\r\n        for (const name in secondPrograms)\r\n            if (secondPrograms[name] !== undefined)\r\n                risks.push({name, sum: secondPrograms[name]})\r\n\r\n        return risks\r\n    }\r\n\r\n    extractDataForGetCost = (): GetCostRequestInterface => {\r\n        // log('extractDataForGetCost', this.form.getFieldsValue())\r\n        const {getFieldValue} = this.form,\r\n            {code} = this.globalOptions,\r\n            currency = getFieldValue(IDS.CURRENCY),\r\n            multi = getFieldValue(IDS.MULTI),\r\n            periodStartDate = getFieldValue(IDS.PERIOD_START_DATE),\r\n            periodEndDate = getFieldValue(IDS.PERIOD_END_DATE),\r\n            risks = this.formatRisks(getFieldValue(IDS.SECOND_PROGRAMS)),\r\n            data: GetCostRequestInterface = {\r\n                code,\r\n                beginDate: periodStartDate.format(REQUEST_DATE_FORMAT),\r\n                endDate: multi\r\n                    ? moment(periodStartDate)\r\n                          .add(1, 'y')\r\n                          .format(REQUEST_DATE_FORMAT)\r\n                    : periodEndDate.format(REQUEST_DATE_FORMAT),\r\n                countries: getFieldValue(IDS.COUNTRIES),\r\n                currency: currency === 'РУБ' ? 'RUB' : currency,\r\n                multi,\r\n                persons: getFieldValue(IDS.INSUREDS).map(indured => ({\r\n                    birthday: indured.birthday.format(REQUEST_DATE_FORMAT),\r\n                })),\r\n                sum: getFieldValue(IDS.INSURANCE_SUM),\r\n                totalDays: multi\r\n                    ? getFieldValue(IDS.PERIOD_MULTI)\r\n                    : getFieldValue(IDS.NUMBER_OF_DAYS),\r\n                risks: risks,\r\n                sports: getFieldValue(IDS.SPORTS),\r\n                options: {\r\n                    covid: getFieldValue([IDS.OPTIONS, IDS.COVID]),\r\n                },\r\n            }\r\n\r\n        let promo = getFieldValue(IDS.PROMOCODE)\r\n        if (promo) {\r\n            promo = promo.toLowerCase()\r\n            PROMOCODES.some(el => {\r\n                if (promo === el.promocode) return (data.code = el.partnerCode)\r\n            })\r\n        }\r\n\r\n        return data\r\n    }\r\n\r\n    extractDataForCreate = (): CreatePolicyRequestInterface => {\r\n        const {getFieldValue} = this.form,\r\n            // Извлекаем часть данных, которые требуются для рассчета\r\n            chunkOfData = this.extractDataForGetCost(),\r\n            insureds = getFieldValue(IDS.INSUREDS).map(insured => ({\r\n                lastName: insured[IDS.LAST_NAME],\r\n                firstName: insured[IDS.FIRST_NAME],\r\n                birthday: insured[IDS.BIRTHDAY].format(REQUEST_DATE_FORMAT),\r\n                passportNumber:\r\n                    insured[IDS.PASSPORT_SERIAL] +\r\n                    ' ' +\r\n                    insured[IDS.PASSPORT_NUMBER],\r\n            })),\r\n            options = getFieldValue(IDS.OPTIONS)\r\n\r\n        return {\r\n            ...chunkOfData,\r\n            insurer: {\r\n                lastName: getFieldValue(IDS.INSURANT_LAST_NAME),\r\n                firstName: getFieldValue(IDS.INSURANT_FIRST_NAME),\r\n                middleName: getFieldValue(IDS.INSURANT_MIDDLE_NAME),\r\n                address: getFieldValue(IDS.INSURANT_ADDRESS),\r\n                phone: getFieldValue(IDS.INSURANT_PHONE),\r\n                email: getFieldValue(IDS.INSURANT_EMAIL),\r\n                birthday: getFieldValue(IDS.INSURANT_BIRTHDAY).format(\r\n                    REQUEST_DATE_FORMAT\r\n                ),\r\n                passport: {\r\n                    serial: getFieldValue(IDS.INSURANT_PASSPORT_SERIAL),\r\n                    number: getFieldValue(IDS.INSURANT_PASSPORT_NUMBER),\r\n                    issuedDate: getFieldValue(\r\n                        IDS.INSURANT_PASSPORT_DATE_OF_ISSUE\r\n                    ).format(REQUEST_DATE_FORMAT),\r\n                },\r\n            },\r\n            options: {\r\n                ...options,\r\n                ...this.getBonusesData(),\r\n                referrer: document.referrer || undefined,\r\n                ymClientId: getYmClientID(NAME_YM_EUROINS),\r\n            },\r\n            persons: insureds,\r\n            test: this.globalOptions.dinamyc.test,\r\n        }\r\n    }\r\n\r\n    getBonusesData() {\r\n        const {globalOptions, form} = this\r\n\r\n        if (bonusesSystemUsed(globalOptions)) {\r\n            return {\r\n                clientIsn: globalOptions.clientIsn,\r\n                bonus: form.getFieldValue('bonuses'),\r\n            }\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n}\r\n\r\nconst extractor = new Extractor()\r\n\r\nexport default extractor\r\n","import {FormInstance} from 'antd/lib/form'\r\nimport IDS from '../constants/ids'\r\n\r\ntype stringOrNumberType = string | number\r\ntype NamePathType = string | stringOrNumberType[]\r\ntype NamePathsType = NamePathType[]\r\ntype ValidationStatus = 'success' | 'error'\r\n\r\nclass Validator {\r\n    private form: FormInstance\r\n\r\n    setForm = form => {\r\n        this.form = form\r\n    }\r\n\r\n    validateFirstStep = async (): Promise<ValidationStatus> => {\r\n        console.log('validateFirstStep')\r\n        const {form} = this\r\n\r\n        try {\r\n            const insureds = form.getFieldValue(IDS.INSUREDS),\r\n                birthdays = insureds.map((insured, i) => [\r\n                    IDS.INSUREDS,\r\n                    i,\r\n                    IDS.BIRTHDAY,\r\n                ]),\r\n                ids: NamePathsType = [\r\n                    IDS.COUNTRIES,\r\n                    IDS.PERIOD_START_DATE,\r\n                    IDS.PERIOD_END_DATE,\r\n                    IDS.NUMBER_OF_DAYS,\r\n                    ...birthdays,\r\n                ]\r\n\r\n            const values = await form.validateFields(ids)\r\n            console.log('Валидация первого шага успешна. Значения ', values)\r\n            return 'success'\r\n        } catch (e) {\r\n            console.log('Ошибка при валидации первого шага! ', e)\r\n            form.scrollToField(e.errorFields[0].name)\r\n            return 'error'\r\n        }\r\n    }\r\n\r\n    validateSecondStep = async (): Promise<ValidationStatus> => {\r\n        const {form} = this\r\n\r\n        try {\r\n            const ids: NamePathsType = [IDS.AGREEMENT_WITH_RULES, IDS.PROMOCODE]\r\n\r\n            const values = await form.validateFields(ids)\r\n            console.log('Валидация второго шага успешна. Значения ', values)\r\n            return 'success'\r\n        } catch (e) {\r\n            console.log('Ошибка при валидации второго шага! ', e)\r\n            form.scrollToField(e.errorFields[0].name)\r\n            return 'error'\r\n        }\r\n    }\r\n\r\n    validateThirdStep = async (): Promise<ValidationStatus> => {\r\n        const {form} = this,\r\n            insureds = form.getFieldValue(IDS.INSUREDS)\r\n\r\n        try {\r\n            const ids: NamePathsType = [\r\n                IDS.INSURANT_PHONE,\r\n                IDS.INSURANT_EMAIL,\r\n                IDS.INSURANT_LAST_NAME,\r\n                IDS.INSURANT_FIRST_NAME,\r\n                IDS.INSURANT_MIDDLE_NAME,\r\n                IDS.INSURANT_BIRTHDAY,\r\n                IDS.INSURANT_ADDRESS,\r\n                IDS.INSURANT_PASSPORT_SERIAL,\r\n                IDS.INSURANT_PASSPORT_NUMBER,\r\n                IDS.INSURANT_PASSPORT_DATE_OF_ISSUE,\r\n                IDS.AGREEMENT_WITH_PROTECTION_POLICY,\r\n            ]\r\n\r\n            insureds.forEach((insured, i) => {\r\n                ids.push([IDS.INSUREDS, i, IDS.LAST_NAME])\r\n                ids.push([IDS.INSUREDS, i, IDS.FIRST_NAME])\r\n                ids.push([IDS.INSUREDS, i, IDS.PASSPORT_SERIAL])\r\n                ids.push([IDS.INSUREDS, i, IDS.PASSPORT_NUMBER])\r\n            })\r\n\r\n            const values = await form.validateFields(ids)\r\n            console.log('Валидация третьего шага успешна. Значения ', values)\r\n            return 'success'\r\n        } catch (e) {\r\n            console.log('Ошибка при валидации третьего шага! ', e)\r\n            form.scrollToField(e.errorFields[0].name)\r\n            return 'error'\r\n        }\r\n    }\r\n\r\n    validateFourthStep = async () => {\r\n        const {form} = this\r\n\r\n        try {\r\n            const ids: NamePathsType = []\r\n\r\n            const values = await form.validateFields(ids)\r\n            console.log('Валидация четвертого шага успешна. Значения ', values)\r\n            return 'success'\r\n        } catch (e) {\r\n            console.log('Ошибка при валидации четвертого шага! ', e)\r\n            form.scrollToField(e.errorFields[0].name)\r\n            return 'error'\r\n        }\r\n    }\r\n}\r\n\r\nconst validator = new Validator()\r\n\r\nexport default validator\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Checkbox from 'antd/lib/checkbox'\r\nimport 'antd/lib/checkbox/style'\r\nimport {URL_USER_AGREEMENT} from '../../constants'\r\nimport {\r\n    URL_AGREEMENT_OF_PERSONAL_DATA,\r\n    URL_POLICY_PERSONAL_DATA,\r\n} from '../../../../common/constants/doc-urls'\r\nimport IDS from '../../constants/ids'\r\nimport requiredTrueCheckboxValidator from '../../../../../common/helpers/validators/required-true-checkbox'\r\n\r\nconst {Item} = Form\r\n\r\nconst AgreementWithProtectionPolicy: FC = memo(() => {\r\n    return (\r\n        <CalcCard>\r\n            <h2>Подтверждение пользовательского соглашения</h2>\r\n\r\n            <Item\r\n                name={IDS.AGREEMENT_WITH_PROTECTION_POLICY}\r\n                valuePropName={'checked'}\r\n                rules={[\r\n                    {\r\n                        message: 'Поставьте отметку о согласии',\r\n                        validator: requiredTrueCheckboxValidator,\r\n                    },\r\n                ]}\r\n                required\r\n            >\r\n                <Checkbox>\r\n                    <span>\r\n                        Я согласен с текстом{' '}\r\n                        <a\r\n                            className={'e-link_underline'}\r\n                            href={URL_USER_AGREEMENT}\r\n                            target={'_blank'}\r\n                        >\r\n                            Пользовательского соглашения\r\n                        </a>\r\n                        . Я согласен на обработку{' '}\r\n                        <a\r\n                            className={'e-link_underline'}\r\n                            href={URL_AGREEMENT_OF_PERSONAL_DATA}\r\n                            target={'_blank'}\r\n                        >\r\n                            Персональных данных (ПД)\r\n                        </a>{' '}\r\n                        и ознакомился с{' '}\r\n                        <a\r\n                            className={'e-link_underline'}\r\n                            href={URL_POLICY_PERSONAL_DATA}\r\n                            target={'_blank'}\r\n                        >\r\n                            Политикой защиты и обработки ПД\r\n                        </a>\r\n                        .\r\n                    </span>\r\n                </Checkbox>\r\n            </Item>\r\n        </CalcCard>\r\n    )\r\n})\r\n\r\nexport default AgreementWithProtectionPolicy\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Checkbox from 'antd/lib/checkbox'\r\nimport 'antd/lib/checkbox/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport IDS from '../../constants/ids'\r\nimport {URL_PROGRAM, URL_RULES} from '../../constants'\r\nimport './index.less'\r\nimport requiredTrueCheckboxValidator from '../../../../../common/helpers/validators/required-true-checkbox'\r\n\r\nconst {Item} = Form\r\n\r\nconst AgreementWithRules: FC = () => {\r\n    return (\r\n        <CalcCard>\r\n            <h2>Подтверждение правил</h2>\r\n\r\n            <Item\r\n                name={IDS.AGREEMENT_WITH_RULES}\r\n                rules={[\r\n                    {\r\n                        message:\r\n                            'Поставьте отметку о согласии с правилами и программой',\r\n                        validator: requiredTrueCheckboxValidator,\r\n                    },\r\n                ]}\r\n                valuePropName={'checked'}\r\n            >\r\n                <Checkbox className={'e-awr'}>\r\n                    <span>*</span> С{' '}\r\n                    <a\r\n                        className={'e-link_underline'}\r\n                        href={URL_RULES}\r\n                        target={'_blank'}\r\n                    >\r\n                        правилами\r\n                    </a>{' '}\r\n                    и{' '}\r\n                    <a\r\n                        className={'e-link_underline'}\r\n                        href={URL_PROGRAM}\r\n                        target={'_blank'}\r\n                    >\r\n                        программой страхования\r\n                    </a>{' '}\r\n                    ознакомлен и согласен их исполнять.\r\n                </Checkbox>\r\n            </Item>\r\n        </CalcCard>\r\n    )\r\n}\r\n\r\nexport default AgreementWithRules\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport useUrlParams from '../../../../../common/hooks/use-url-params'\r\nimport UrlParamsInterface, {\r\n    PaymentStatusType,\r\n} from '../../../../common/types/url-params'\r\nimport Calculator from '../calculator'\r\nimport './index.less'\r\nimport GlobalOptionsInterface from '../../types/global-options'\r\nimport PageAfterPayment from '../../../../common/components/page-after-payment'\r\nimport QuestionAboutEuroins from '../../../../common/components/question-about-euroins'\r\n\r\ninterface AppPropsInterface {\r\n    globalOptions: GlobalOptionsInterface\r\n}\r\n\r\nconst App: FC<AppPropsInterface> = ({globalOptions}) => {\r\n    const params = useUrlParams<UrlParamsInterface>(),\r\n        {payment_status} = params\r\n\r\n    if (payment_status === 'success' || payment_status === 'error')\r\n        return (\r\n            <PageAfterPayment\r\n                params={params}\r\n                rootNodeId={globalOptions.rootNodeId}\r\n                successContent={<QuestionAboutEuroins params={params} />}\r\n            />\r\n        )\r\n\r\n    return <Calculator globalOptions={globalOptions} />\r\n}\r\n\r\nexport default App\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo, useCallback, useEffect, useState} from 'react'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Select from 'antd/lib/select'\r\nimport 'antd/lib/select/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport IDS from '../../constants/ids'\r\nimport AssistancesType from '../../types/models/assistance'\r\nimport './index.less'\r\nimport AssistancesStateType from '../../types/state/assistances-state'\r\nimport {\r\n    createErrorState,\r\n    createInitialState,\r\n    createStartedState,\r\n    createSuccessState,\r\n} from '../../../../../common/helpers/create-request-state'\r\nimport Api from '../../classes/api'\r\nimport {COMPONENT_SIZE, RF_ONLY_ID} from '../../constants'\r\n\r\nconst {Item} = Form,\r\n    {Option} = Select,\r\n    initState = createInitialState<AssistancesType>()\r\n\r\nconst AssistanceSelection: FC = memo(() => {\r\n    const [assistances, setAssistances] = useState<AssistancesStateType>(\r\n            initState\r\n        ),\r\n        handleComponentDidMount = useCallback(async () => {\r\n            setAssistances(createStartedState())\r\n            const result = await Api.getAssistances()\r\n            if ('errors' in result) return createErrorState(result.errors)\r\n            setAssistances(createSuccessState(result))\r\n        }, [])\r\n\r\n    useEffect(() => {\r\n        handleComponentDidMount().then()\r\n    }, [])\r\n\r\n    return (\r\n        <Item\r\n            shouldUpdate={(prevValues, nextValues) =>\r\n                prevValues[IDS.COUNTRIES] !== nextValues[IDS.COUNTRIES]\r\n            }\r\n            noStyle\r\n        >\r\n            {({getFieldValue}) => {\r\n                const selectedCountries = getFieldValue(IDS.COUNTRIES)\r\n\r\n                if (selectedCountries.includes(RF_ONLY_ID)) return null\r\n\r\n                return (\r\n                    <CalcCard>\r\n                        <h2>Выбор ассистанса</h2>\r\n                        <p>\r\n                            Ассистанс-компании являются посредниками между\r\n                            страховой компанией и её компаньонами (медицинскими\r\n                            центрами и тп). Они оказывают содействие туристам,\r\n                            находящимся за рубежом, при медицинском\r\n                            обслуживании, организации госпитализации и лечения и\r\n                            так далее.\r\n                        </p>\r\n\r\n                        <Row>\r\n                            <Col sm={12} xl={8}>\r\n                                <Item name={[IDS.OPTIONS, IDS.ASSISTANCE]}>\r\n                                    <Select\r\n                                        className={'e-sa__select'}\r\n                                        loading={\r\n                                            assistances.requestStatus ===\r\n                                            'started'\r\n                                        }\r\n                                        size={COMPONENT_SIZE}\r\n                                    >\r\n                                        {assistances.data !== null &&\r\n                                            assistances.data.map(assistance => (\r\n                                                <Option\r\n                                                    value={assistance.code}\r\n                                                    key={assistance.code}\r\n                                                >\r\n                                                    {assistance.name}\r\n                                                </Option>\r\n                                            ))}\r\n                                    </Select>\r\n                                </Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Item shouldUpdate={true}>\r\n                            {({getFieldValue}) => {\r\n                                if (assistances.data === null) return null\r\n\r\n                                const assistanceValue = getFieldValue([\r\n                                        IDS.OPTIONS,\r\n                                        IDS.ASSISTANCE,\r\n                                    ]),\r\n                                    assistanceInfo = assistances.data.find(\r\n                                        assistance =>\r\n                                            assistance.code === assistanceValue\r\n                                    )\r\n\r\n                                return (\r\n                                    <Row>\r\n                                        <Col sm={12} xl={10}>\r\n                                            <img\r\n                                                className={'e-sa__img'}\r\n                                                src={assistanceInfo.image}\r\n                                                alt={'Логотип'}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm={24} xl={14}>\r\n                                            <p>{assistanceInfo.description}</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            }}\r\n                        </Item>\r\n                    </CalcCard>\r\n                )\r\n            }}\r\n        </Item>\r\n    )\r\n})\r\n\r\nexport default AssistanceSelection\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, useEffect} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport useController from '../../hooks/use-controller'\r\nimport Step from '../../../../common/components/step'\r\nimport TripParams from '../trip-params'\r\nimport Filling from '../filling'\r\nimport DataAndPayment from '../data-and-payment'\r\nimport INIT_VALUES from '../../constants/init-values'\r\nimport Header from '../../../../common/components/header'\r\nimport {HEADER_STEPS} from '../../constants'\r\nimport GlobalOptionsInterface from '../../types/global-options'\r\nimport CheckWrapper from '../../../../common/components/check-wrapper'\r\nimport Check from '../check'\r\nimport './index.less'\r\nimport CheckCost from '../../../../common/components/check-cost'\r\nimport ControlBlock from '../control-block'\r\nimport PhoneChecker from '../../../../common/components/phone-checker'\r\nimport Modal from 'antd/lib/modal'\r\nimport 'antd/lib/modal/style'\r\nimport notification from 'antd/lib/notification'\r\nimport 'antd/lib/notification/style'\r\nimport addTestPayment from '../../../../common/helpers/add-test-payment'\r\n\r\ninterface CalculatorPropsInterface {\r\n    globalOptions: GlobalOptionsInterface\r\n}\r\n\r\n// todo - оптимизировать количество модулей\r\n\r\nconst Calculator: FC<CalculatorPropsInterface> = ({globalOptions}) => {\r\n    const {\r\n            form,\r\n            currentStep,\r\n            cost,\r\n            policy,\r\n            paymentLink,\r\n            prevStep,\r\n            recalculate,\r\n            bonusesSystemIsOn,\r\n            handleNextClick,\r\n        } = useController({globalOptions}),\r\n        nextDisabled =\r\n            cost.requestStatus === 'started' ||\r\n            policy.requestStatus === 'started' ||\r\n            paymentLink.requestStatus === 'started'\r\n\r\n    // todo - initial-values некоторых полей, нужно высчитывать при слиянии globalOptions,\r\n    //  например поле daysAmount\r\n\r\n    useEffect(() => {\r\n        if (cost.requestStatus === 'error') {\r\n            Modal.error({\r\n                title: 'Ошибка',\r\n                content: <p>{cost.errorMessage}</p>,\r\n            })\r\n        }\r\n    }, [cost])\r\n\r\n    useEffect(() => {\r\n        if (policy.requestStatus === 'error') {\r\n            Modal.error({\r\n                title: 'Ошибка создания полиса',\r\n                content: <p>{policy.errorMessage}</p>,\r\n            })\r\n        }\r\n    }, [policy])\r\n\r\n    useEffect(() => {\r\n        addTestPayment(globalOptions)\r\n    }, [])\r\n\r\n    return (\r\n        <Form\r\n            className={'e-calc'}\r\n            layout={'vertical'}\r\n            form={form}\r\n            name={'main'}\r\n            initialValues={INIT_VALUES}\r\n        >\r\n            <Row gutter={64}>\r\n                <Col sm={24}>\r\n                    <Header\r\n                        currentStep={currentStep}\r\n                        calcSteps={HEADER_STEPS}\r\n                    />\r\n                </Col>\r\n                <Col xs={24} md={14}>\r\n                    <Step hidden={currentStep !== 0}>\r\n                        <TripParams form={form} />\r\n                    </Step>\r\n                    <Step hidden={currentStep !== 1}>\r\n                        <Filling\r\n                            form={form}\r\n                            cost={cost.data === null ? 0 : cost.data.totalRub}\r\n                            globalOptions={globalOptions}\r\n                            onValueChange={recalculate}\r\n                            bonusesSystemIsOn={bonusesSystemIsOn}\r\n                        />\r\n                    </Step>\r\n                    <Step hidden={currentStep !== 2}>\r\n                        <DataAndPayment form={form} />\r\n                    </Step>\r\n                    <Step hidden={currentStep !== 3}>\r\n                        <PhoneChecker\r\n                            stepIsActive={currentStep === 3}\r\n                            form={form}\r\n                            globalOptions={globalOptions}\r\n                        />\r\n                    </Step>\r\n                </Col>\r\n                <Col xs={24} md={8}>\r\n                    <CheckWrapper\r\n                        rootNodeId={globalOptions.rootNodeId}\r\n                        currentStep={currentStep}\r\n                    >\r\n                        <Check cost={cost} />\r\n                        <CheckCost\r\n                            currentStep={currentStep}\r\n                            cost={cost.data === null ? 0 : cost.data.totalRub}\r\n                            defaultCost={'от 68'}\r\n                            loadingCost={cost.requestStatus === 'started'}\r\n                            bonusesSystemIsOn={bonusesSystemIsOn}\r\n                            rootNodeId={globalOptions.rootNodeId}\r\n                            onPrevStepClick={prevStep}\r\n                        />\r\n                    </CheckWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={64}>\r\n                <Col sm={24} md={14}>\r\n                    <ControlBlock\r\n                        currentStep={currentStep}\r\n                        onNextClick={handleNextClick}\r\n                        onPrevClick={prevStep}\r\n                        nextDisabled={nextDisabled}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            {ENV_IS_DEV ? (\r\n                <button\r\n                    onClick={e => {\r\n                        e.preventDefault()\r\n                        // e.stopPropagation()\r\n                        console.log(form.getFieldsValue())\r\n                        console.log(globalOptions)\r\n                    }}\r\n                >\r\n                    Данные\r\n                </button>\r\n            ) : null}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Divider from 'antd/lib/divider'\r\nimport 'antd/lib/divider/style'\r\nimport CostStateType from '../../types/state/cost-state'\r\nimport {FormInstance} from 'antd/lib/form'\r\nimport GlobalOutlined from '@ant-design/icons/lib/icons/GlobalOutlined'\r\nimport IDS from '../../constants/ids'\r\nimport {COUNTRIES} from '../../constants/countries'\r\nimport './index.less'\r\nimport {OUTPUT_DATE_FORMAT} from '../../../../common/constants'\r\nimport * as moment from 'moment'\r\nimport SECOND_PROGRAMS from '../../constants/second-programs'\r\nimport divideIntegerBySpace from '../../../../../common/helpers/divide-integer-by-space'\r\n\r\nconst {Item} = Form\r\n\r\ninterface CheckPropsInterface {\r\n    cost: CostStateType\r\n}\r\n\r\nconst getCountryNames = ({getFieldValue}: FormInstance) => {\r\n        const selectedCountries = getFieldValue(IDS.COUNTRIES),\r\n            countryNames = []\r\n\r\n        COUNTRIES.forEach(country => {\r\n            const index = selectedCountries.indexOf(country.id)\r\n            if (index !== -1) countryNames.push(country.text)\r\n        })\r\n\r\n        if (countryNames.length === 0) countryNames.push('нет выбранных стран')\r\n\r\n        return countryNames.join(', ')\r\n    },\r\n    getDates = ({getFieldValue}: FormInstance) => {\r\n        const periodStartDate = getFieldValue(IDS.PERIOD_START_DATE),\r\n            periodStartDateEntered = !!periodStartDate,\r\n            periodEndDate = getFieldValue(IDS.PERIOD_END_DATE),\r\n            periodEndDateEntered = !!periodEndDate,\r\n            isMulti = getFieldValue(IDS.MULTI),\r\n            from = periodStartDateEntered\r\n                ? periodStartDate.format(OUTPUT_DATE_FORMAT)\r\n                : '-'\r\n        let to = ''\r\n\r\n        if (isMulti)\r\n            to = periodStartDateEntered\r\n                ? moment(periodStartDate)\r\n                      .add(1, 'year')\r\n                      .format(OUTPUT_DATE_FORMAT)\r\n                : '-'\r\n        else\r\n            to = periodEndDateEntered\r\n                ? periodEndDate.format(OUTPUT_DATE_FORMAT)\r\n                : '-'\r\n\r\n        return `с ${from} по ${to}`\r\n    },\r\n    getNamesOfSecondPrograms = ({\r\n        getFieldValue,\r\n        getFieldsValue,\r\n    }: FormInstance) => {\r\n        const selectedSports = getFieldValue(IDS.SPORTS),\r\n            selectedSecondPrograms = getFieldsValue()[IDS.SECOND_PROGRAMS],\r\n            secondProgramNames = []\r\n\r\n        if (selectedSecondPrograms === undefined) return ''\r\n\r\n        SECOND_PROGRAMS.forEach(secondProgram => {\r\n            if (selectedSecondPrograms[secondProgram.id])\r\n                secondProgramNames.push(secondProgram.name)\r\n        })\r\n\r\n        if (selectedSports.length > 0) secondProgramNames.push('Активный отдых')\r\n\r\n        if (secondProgramNames.length === 0)\r\n            secondProgramNames.push('нет выбранных')\r\n\r\n        return secondProgramNames.join(', ')\r\n    }\r\n\r\nconst Check: FC<CheckPropsInterface> = ({cost}) => {\r\n    return (\r\n        <Item shouldUpdate={true} noStyle>\r\n            {(form: FormInstance) => {\r\n                const {getFieldValue} = form,\r\n                    countryNames = getCountryNames(form),\r\n                    dates = getDates(form),\r\n                    numberOfInsured = getFieldValue(IDS.INSUREDS).length,\r\n                    insuranceSum = getFieldValue(IDS.INSURANCE_SUM),\r\n                    cover = `${divideIntegerBySpace(\r\n                        insuranceSum\r\n                    )} ${getFieldValue(IDS.CURRENCY)}`,\r\n                    secondProgramNames = getNamesOfSecondPrograms(form)\r\n\r\n                return (\r\n                    <>\r\n                        <h2>Ваш полис</h2>\r\n                        <Divider />\r\n                        <h3>\r\n                            <GlobalOutlined className={'check__icon'} />{' '}\r\n                            {countryNames}\r\n                        </h3>\r\n                        <p>\r\n                            Полис действует: <b>{dates}</b>\r\n                        </p>\r\n                        <p>\r\n                            Количество человек: <b>{numberOfInsured}</b>\r\n                        </p>\r\n                        <p>\r\n                            Покрытие: <b>{cover}</b>\r\n                        </p>\r\n                        <p>\r\n                            Дополнительные опции: <b>{secondProgramNames}</b>\r\n                        </p>\r\n                        <Divider />\r\n                    </>\r\n                )\r\n            }}\r\n        </Item>\r\n    )\r\n}\r\n\r\nexport default Check\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport IDS from '../../constants/ids'\r\nimport PhoneItem from '../../../../../common/components/form-items/phone-item'\r\nimport {COMPONENT_SIZE} from '../../constants'\r\nimport LABELS from '../../constants/labels'\r\n\r\nconst {Item} = Form\r\n\r\nconst Contacts: FC = memo(() => {\r\n    return (\r\n        <CalcCard>\r\n            <h2>Данные для получения полиса</h2>\r\n\r\n            <Row gutter={{sm: 8, md: 16, xl: 24}}>\r\n                <Col sm={12} lg={8}>\r\n                    <Item\r\n                        name={IDS.INSURANT_EMAIL}\r\n                        label={LABELS.EMAIL}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                type: 'email',\r\n                                message: 'Введите корректный email',\r\n                            },\r\n                        ]}\r\n                        validateTrigger={'onBlur'}\r\n                    >\r\n                        <Input size={COMPONENT_SIZE} />\r\n                    </Item>\r\n                </Col>\r\n                <Col sm={12} lg={8}>\r\n                    <PhoneItem name={IDS.INSURANT_PHONE} />\r\n                </Col>\r\n            </Row>\r\n        </CalcCard>\r\n    )\r\n})\r\n\r\nexport default Contacts\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, SyntheticEvent, useCallback, useEffect} from 'react'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Button from 'antd/lib/button'\r\nimport 'antd/lib/button/style'\r\nimport ArrowLeftOutlined from '@ant-design/icons/lib/icons/ArrowLeftOutlined'\r\nimport ArrowRightOutlined from '@ant-design/icons/lib/icons/ArrowRightOutlined'\r\nimport {COMPONENT_SIZE} from '../../constants'\r\nimport './index.less'\r\n\r\ninterface ControlBlockPropsInterface {\r\n    currentStep: number\r\n    onNextClick: (e) => void\r\n    onPrevClick: () => void\r\n    nextDisabled: boolean\r\n}\r\nconst headerNodeId = 'calc-header'\r\nlet firstRender = true\r\n\r\nconst nextText = ['Рассчитать', 'Оформить', 'Проверить телефон', 'Оплатить']\r\n\r\nconst ControlBlock: FC<ControlBlockPropsInterface> = ({\r\n    currentStep,\r\n    onPrevClick,\r\n    onNextClick,\r\n    nextDisabled,\r\n}) => {\r\n    useEffect(() => {\r\n        if (firstRender) {\r\n            firstRender = !firstRender\r\n            return\r\n        }\r\n\r\n        const headerNode = document.getElementById(headerNodeId)\r\n\r\n        if (headerNode.scrollIntoView) {\r\n            headerNode.scrollIntoView({behavior: 'smooth'})\r\n        } else {\r\n            window.location.hash = ''\r\n            window.location.hash = `#${headerNodeId}`\r\n        }\r\n    }, [currentStep])\r\n\r\n    return (\r\n        <Row gutter={{sm: 8, md: 16, xl: 24}}>\r\n            <Col sm={12}>\r\n                {currentStep > 0 ? (\r\n                    <Button\r\n                        className={'e-control-block__button'}\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size={COMPONENT_SIZE}\r\n                        onClick={onPrevClick}\r\n                    >\r\n                        Назад\r\n                    </Button>\r\n                ) : null}\r\n            </Col>\r\n            <Col sm={12}>\r\n                <Button\r\n                    className={'e-control-block__button'}\r\n                    type={'primary'}\r\n                    size={COMPONENT_SIZE}\r\n                    onClick={onNextClick}\r\n                    disabled={nextDisabled}\r\n                >\r\n                    {nextText[currentStep]} <ArrowRightOutlined />\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ControlBlock\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo, useCallback, useRef, useState} from 'react'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport Select from 'antd/lib/select'\r\nimport 'antd/lib/select/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style/index'\r\nimport {COUNTRIES} from '../../constants/countries'\r\nimport {\r\n    COMPONENT_SIZE,\r\n    INSURANCE_SUMS,\r\n    INSURANCE_SUMS_RUS,\r\n    RF_ONLY_ID,\r\n} from '../../constants'\r\nimport './index.less'\r\nimport IDS from '../../constants/ids'\r\nimport {EURO_ONLY} from '../../constants/euro-only'\r\n\r\ninterface CountrySelectionPropsInterface {\r\n    form: FormInstance\r\n}\r\n\r\nconst {Item} = Form,\r\n    {Option} = Select,\r\n    {Group} = Radio\r\n\r\nconst CountrySelection: FC<CountrySelectionPropsInterface> = memo(({form}) => {\r\n    const selectRef = useRef<Select>(),\r\n        [groupOfCountries, setGroupOfCountries] = useState<number>(1),\r\n        [open, setOpen] = useState<boolean>(false),\r\n        setCurrencyAndSum = useCallback(() => {\r\n            const {getFieldValue, setFieldsValue} = form,\r\n                countries = getFieldValue(IDS.COUNTRIES)\r\n            let isEuro = false\r\n\r\n            if (countries.includes(RF_ONLY_ID))\r\n                return setFieldsValue({\r\n                    [IDS.CURRENCY]: 'РУБ',\r\n                    [IDS.INSURANCE_SUM]: INSURANCE_SUMS_RUS[0],\r\n                })\r\n\r\n            countries.some(countryId => {\r\n                if (EURO_ONLY.indexOf(countryId) !== -1) {\r\n                    isEuro = true\r\n                    return true\r\n                }\r\n            })\r\n\r\n            if (isEuro)\r\n                setFieldsValue({\r\n                    [IDS.CURRENCY]: 'EUR',\r\n                    [IDS.INSURANCE_SUM]: INSURANCE_SUMS[0],\r\n                })\r\n            else\r\n                setFieldsValue({\r\n                    [IDS.CURRENCY]: 'USD',\r\n                    [IDS.INSURANCE_SUM]: INSURANCE_SUMS[0],\r\n                })\r\n        }, []),\r\n        hundleCountryGroupChange = useCallback(({target: {value}}) => {\r\n            const {setFieldsValue} = form\r\n\r\n            if (value === 1) setFieldsValue({[IDS.COUNTRIES]: []})\r\n\r\n            // если Весь мир, Шенген или РФ то выставляем только их\r\n            if (value === 255 || value === RF_ONLY_ID || value === 254)\r\n                setFieldsValue({[IDS.COUNTRIES]: [value]})\r\n\r\n            setGroupOfCountries(value)\r\n            setCurrencyAndSum()\r\n        }, []),\r\n        handleDeselectCountry = useCallback(value => {\r\n            if (value === 254) setGroupOfCountries(1)\r\n            setCurrencyAndSum()\r\n        }, []),\r\n        handleSelect = useCallback(() => {\r\n            selectRef.current.blur()\r\n            setCurrencyAndSum()\r\n        }, [selectRef]),\r\n        handleFocus = useCallback(() => {\r\n            setOpen(true)\r\n        }, []),\r\n        handleBlur = useCallback(() => {\r\n            setOpen(false)\r\n        }, []),\r\n        selectedCountries = form.getFieldValue(IDS.COUNTRIES),\r\n        selectDisabled =\r\n            groupOfCountries === 255 || groupOfCountries === RF_ONLY_ID\r\n\r\n    return (\r\n        <CalcCard className={'country-selection'}>\r\n            <h2>Страна назначения</h2>\r\n\r\n            <Item\r\n                name={[IDS.COUNTRIES]}\r\n                rules={[{required: true, message: 'Выберете страну'}]}\r\n            >\r\n                <Select\r\n                    ref={select => {\r\n                        selectRef.current = select\r\n                    }}\r\n                    className={'country-selection__select'}\r\n                    size={COMPONENT_SIZE}\r\n                    open={open}\r\n                    mode={'multiple'}\r\n                    disabled={selectDisabled}\r\n                    placeholder={'Введите страну'}\r\n                    onDeselect={handleDeselectCountry}\r\n                    onSelect={handleSelect}\r\n                    onFocus={handleFocus}\r\n                    onBlur={handleBlur}\r\n                    optionFilterProp={'children'}\r\n                >\r\n                    {COUNTRIES.map(item => (\r\n                        <Option\r\n                            value={item.id}\r\n                            disabled={\r\n                                [RF_ONLY_ID, 254, 255].includes(item.id) ||\r\n                                (selectedCountries &&\r\n                                    selectedCountries.length > 4 &&\r\n                                    !(selectedCountries.indexOf(item.id) + 1))\r\n                            }\r\n                            key={item.id}\r\n                        >\r\n                            {item.text}\r\n                        </Option>\r\n                    ))}\r\n                </Select>\r\n            </Item>\r\n            <Group\r\n                value={groupOfCountries}\r\n                onChange={hundleCountryGroupChange}\r\n                className={'country-selection__radio-group'}\r\n            >\r\n                <Radio value={1}>Выбранные страны</Radio>\r\n                <Radio value={254}>Страны шенгенского союза + выбранные</Radio>\r\n                <Radio value={255}>Весь мир, исключая США и Канаду</Radio>\r\n                <Radio value={RF_ONLY_ID}>Только РФ</Radio>\r\n            </Group>\r\n        </CalcCard>\r\n    )\r\n})\r\n\r\nexport default CountrySelection\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo, useCallback} from 'react'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Alert from 'antd/lib/alert'\r\nimport 'antd/lib/alert/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport IDS from '../../constants/ids'\r\nimport './index.less'\r\nimport {RF_ONLY_ID} from '../../constants'\r\n\r\nconst {Group, Button} = Radio,\r\n    {Item} = Form\r\n\r\ninterface CovidOptionPropsInterface {\r\n    onValueChange: (fieldName: string[]) => void\r\n}\r\n\r\nconst CovidOption: FC<CovidOptionPropsInterface> = memo(({onValueChange}) => {\r\n    const handleChange = () => {\r\n        onValueChange([IDS.OPTIONS, IDS.COVID])\r\n    }\r\n\r\n    return (\r\n        <Item\r\n            shouldUpdate={(prevValues, currentValues) =>\r\n                prevValues[IDS.COUNTRIES] !== currentValues[IDS.COUNTRIES]\r\n            }\r\n            noStyle\r\n        >\r\n            {({getFieldValue}) => {\r\n                const selectedCountries = getFieldValue(IDS.COUNTRIES),\r\n                    russiaOnly = selectedCountries.includes(RF_ONLY_ID)\r\n\r\n                if (russiaOnly) return\r\n\r\n                return (\r\n                    <CalcCard>\r\n                        <h2>Страхование от covid-19</h2>\r\n                        <Alert\r\n                            type={'warning'}\r\n                            message={\r\n                                'Без данной опции документы в посольстве могут не принять. При включении этой опции она будет указана в вашем полисе.'\r\n                            }\r\n                            showIcon\r\n                        />\r\n                        <Item\r\n                            className={'e-covid-option__item'}\r\n                            name={[IDS.OPTIONS, IDS.COVID]}\r\n                            label={'Включить опцию страхование от covid-19?'}\r\n                        >\r\n                            <Group\r\n                                buttonStyle={'solid'}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <Button value={false}>Нет</Button>\r\n                                <Button value={true}>Да</Button>\r\n                            </Group>\r\n                        </Item>\r\n                    </CalcCard>\r\n                )\r\n            }}\r\n        </Item>\r\n    )\r\n})\r\nexport default CovidOption\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Currency from '../currency'\r\nimport Sums from '../sums'\r\nimport GlobalOptionsInterface from '../../types/global-options'\r\nimport IDS from '../../constants/ids'\r\n\r\ninterface CurrencyAndSumsPropsInterface {\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst CurrencyAndSums: FC<CurrencyAndSumsPropsInterface> = memo(\r\n    ({onValueChange}) => {\r\n        return (\r\n            <CalcCard>\r\n                <Row gutter={16}>\r\n                    <Col md={12} lg={10}>\r\n                        <Currency onValueChange={onValueChange} />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Sums onValueChange={onValueChange} />\r\n                    </Col>\r\n                </Row>\r\n            </CalcCard>\r\n        )\r\n    }\r\n)\r\n\r\nexport default CurrencyAndSums\r\n","import * as React from 'react'\r\nimport {FC, memo, useCallback} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\nimport IDS from '../../constants/ids'\r\nimport {EURO_ONLY} from '../../constants/euro-only'\r\nimport {RF_ONLY_ID} from '../../constants'\r\n\r\nconst {Item} = Form,\r\n    {Group} = Radio\r\n\r\ninterface CurrencyPropsInterface {\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst Currency: FC<CurrencyPropsInterface> = memo(({onValueChange}) => {\r\n    const handleChange = useCallback(() => {\r\n        onValueChange(IDS.CURRENCY)\r\n    }, [onValueChange])\r\n\r\n    return (\r\n        <>\r\n            <h2>Выберете валюту</h2>\r\n\r\n            <Item\r\n                shouldUpdate={(prevValues, currentValues) =>\r\n                    prevValues[IDS.COUNTRIES] !== currentValues[IDS.COUNTRIES]\r\n                }\r\n            >\r\n                {({getFieldValue}) => {\r\n                    const countries = getFieldValue(IDS.COUNTRIES),\r\n                        russiaOnly = countries.includes(RF_ONLY_ID)\r\n                    let onlyEuro = false\r\n\r\n                    countries.some(countryId => {\r\n                        if (EURO_ONLY.includes(countryId)) {\r\n                            return (onlyEuro = true)\r\n                        }\r\n                    })\r\n\r\n                    return (\r\n                        <Item name={IDS.CURRENCY}>\r\n                            <Group onChange={handleChange}>\r\n                                <Radio\r\n                                    value={'USD'}\r\n                                    disabled={onlyEuro || russiaOnly}\r\n                                >\r\n                                    USD\r\n                                </Radio>\r\n                                <Radio value={'EUR'} disabled={russiaOnly}>\r\n                                    EUR\r\n                                </Radio>\r\n                                <Radio value={'РУБ'} disabled={!russiaOnly}>\r\n                                    РУБ\r\n                                </Radio>\r\n                            </Group>\r\n                        </Item>\r\n                    )\r\n                }}\r\n            </Item>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Currency\r\n","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport Input from 'antd/lib/input'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport Contacts from '../contacts'\r\nimport IDS from '../../constants/ids'\r\nimport InsuredsInfo from '../insureds-info'\r\nimport InsurantInfo from '../insurant-info'\r\nimport AgreementWithProtectionPolicy from '../agreement-with-protection-policy'\r\n\r\nconst {Item} = Form\r\n\r\ninterface DataAndPaymentPropsInterface {\r\n    form: FormInstance\r\n}\r\n\r\nconst DataAndPayment: FC<DataAndPaymentPropsInterface> = ({form}) => {\r\n    return (\r\n        <>\r\n            <Contacts />\r\n            <InsuredsInfo form={form} />\r\n            <InsurantInfo />\r\n            <AgreementWithProtectionPolicy />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataAndPayment\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport CurrencyAndSums from '../currency-and-sums'\r\nimport SportSelection from '../sport-selection'\r\nimport SecondPrograms from '../second-programs'\r\nimport PromocodeOrBonusesWrapper from '../promocode-or-bonuses-wrapper'\r\nimport {FormInstance} from 'antd/lib/form'\r\nimport GlobalOptionsInterface from '../../types/global-options'\r\nimport AssistanceSelection from '../assistance-selection'\r\nimport AgreementWithRules from '../agreement-with-rules'\r\nimport CovidOption from '../covid-option'\r\n\r\ninterface FillingPropsInterface {\r\n    form: FormInstance\r\n    cost: number\r\n    globalOptions: GlobalOptionsInterface\r\n    onValueChange: (fieldName: string | string[]) => void\r\n    bonusesSystemIsOn: boolean\r\n}\r\n\r\nconst Filling: FC<FillingPropsInterface> = memo(\r\n    ({form, cost, globalOptions, onValueChange, bonusesSystemIsOn}) => {\r\n        return (\r\n            <>\r\n                <CurrencyAndSums onValueChange={onValueChange} />\r\n                <SportSelection onValueChange={onValueChange} />\r\n                <SecondPrograms onValueChange={onValueChange} />\r\n                <PromocodeOrBonusesWrapper\r\n                    form={form}\r\n                    cost={cost}\r\n                    globalOptions={globalOptions}\r\n                    onValueChange={onValueChange}\r\n                    bonusesSystemIsOn={bonusesSystemIsOn}\r\n                />\r\n                <AssistanceSelection />\r\n                <AgreementWithRules />\r\n                <CovidOption onValueChange={onValueChange} />\r\n            </>\r\n        )\r\n    }\r\n)\r\n\r\nexport default Filling\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, useCallback} from 'react'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport {COMPONENT_SIZE, RF_ONLY_ID} from '../../constants'\r\nimport IDS from '../../constants/ids'\r\nimport Date from '../../../../../common/components/custom-form-components/date'\r\nimport LABELS from '../../constants/labels'\r\nimport PassportData from '../../../../../common/components/passport-data'\r\nimport isAdultValidator from '../../../../../common/helpers/validators/is-adult'\r\nimport {STANDART_ITEM_RULES} from '../../../../common/constants'\r\nimport * as moment from 'moment'\r\nimport './index.less'\r\nimport resetInsuredIsInsurant from '../../helpers/reset-insured-is-insurant'\r\nimport InsuredIsInsurant from './insured-is-insurant'\r\n\r\nconst {Item, List} = Form,\r\n    {Group, Button} = Radio\r\n\r\nconst InsurantInfo: FC = () => {\r\n    const setInsuredToInsurant = useCallback(\r\n            ({getFieldValue, setFieldsValue}: FormInstance) => {\r\n                const insureds = getFieldValue(IDS.INSUREDS),\r\n                    insuredIsInsurantId = getFieldValue(\r\n                        IDS.INSURED_IS_INSURANT_ID\r\n                    ),\r\n                    insuredInsurant = insureds[insuredIsInsurantId]\r\n\r\n                setFieldsValue({\r\n                    [IDS.INSURANT]: {\r\n                        [IDS.LAST_NAME]: insuredInsurant[IDS.LAST_NAME],\r\n                        [IDS.FIRST_NAME]: insuredInsurant[IDS.FIRST_NAME],\r\n                        [IDS.MIDDLE_NAME]: insuredInsurant[IDS.MIDDLE_NAME],\r\n                        [IDS.BIRTHDAY]: insuredInsurant[IDS.BIRTHDAY],\r\n                        [IDS.PASSPORT_SERIAL]:\r\n                            insuredInsurant[IDS.PASSPORT_SERIAL],\r\n                        [IDS.PASSPORT_NUMBER]:\r\n                            insuredInsurant[IDS.PASSPORT_NUMBER],\r\n                    },\r\n                })\r\n            },\r\n            []\r\n        ),\r\n        handleResetInsured = useCallback(resetInsuredIsInsurant, [])\r\n\r\n    return (\r\n        <Item shouldUpdate={true} noStyle>\r\n            {(form: FormInstance) => {\r\n                const {getFieldValue} = form,\r\n                    insureds = getFieldValue(IDS.INSUREDS)\r\n\r\n                if (\r\n                    insureds.some(insured => !insured || !insured[IDS.BIRTHDAY])\r\n                )\r\n                    return null\r\n\r\n                const adultInsureds = getFieldValue(IDS.INSUREDS).filter(\r\n                        insured =>\r\n                            moment().diff(insured[IDS.BIRTHDAY], 'years') > 18\r\n                    ),\r\n                    countries = getFieldValue(IDS.COUNTRIES),\r\n                    russiaOnly = countries.includes(RF_ONLY_ID),\r\n                    insuredIsInsurantId = getFieldValue(\r\n                        IDS.INSURED_IS_INSURANT_ID\r\n                    ),\r\n                    insuredIsInsurant = insuredIsInsurantId !== null\r\n\r\n                return (\r\n                    <CalcCard>\r\n                        <h2>Страхователь (тот, кто оплачивает полис)</h2>\r\n\r\n                        {russiaOnly ? (\r\n                            <InsuredIsInsurant\r\n                                adultInsureds={adultInsureds}\r\n                                onInsuredSelect={() =>\r\n                                    setInsuredToInsurant(form)\r\n                                }\r\n                                onReset={() => resetInsuredIsInsurant(form)}\r\n                            />\r\n                        ) : null}\r\n\r\n                        <Row gutter={{sm: 8, md: 16, xl: 24}}>\r\n                            <Col sm={12} md={6}>\r\n                                <Item\r\n                                    name={IDS.INSURANT_LAST_NAME}\r\n                                    label={LABELS.LAST_NAME}\r\n                                    rules={STANDART_ITEM_RULES}\r\n                                    required\r\n                                >\r\n                                    <Input\r\n                                        size={COMPONENT_SIZE}\r\n                                        disabled={insuredIsInsurant}\r\n                                    />\r\n                                </Item>\r\n                            </Col>\r\n                            <Col sm={12} md={6}>\r\n                                <Item\r\n                                    name={IDS.INSURANT_FIRST_NAME}\r\n                                    label={LABELS.FIRST_NAME}\r\n                                    rules={STANDART_ITEM_RULES}\r\n                                    required\r\n                                >\r\n                                    <Input\r\n                                        size={COMPONENT_SIZE}\r\n                                        disabled={insuredIsInsurant}\r\n                                    />\r\n                                </Item>\r\n                            </Col>\r\n                            <Col sm={12} md={6}>\r\n                                <Item\r\n                                    name={IDS.INSURANT_MIDDLE_NAME}\r\n                                    label={LABELS.MIDDLE_NAME}\r\n                                    rules={STANDART_ITEM_RULES}\r\n                                    required\r\n                                >\r\n                                    <Input\r\n                                        size={COMPONENT_SIZE}\r\n                                        disabled={insuredIsInsurant}\r\n                                    />\r\n                                </Item>\r\n                            </Col>\r\n                            <Col sm={12} md={6}>\r\n                                <Item\r\n                                    name={IDS.INSURANT_BIRTHDAY}\r\n                                    label={LABELS.BIRTHDAY}\r\n                                    rules={[{validator: isAdultValidator}]}\r\n                                    required\r\n                                >\r\n                                    <Date disabled={insuredIsInsurant} />\r\n                                </Item>\r\n                            </Col>\r\n                            <Col sm={24}>\r\n                                <Item\r\n                                    name={IDS.INSURANT_ADDRESS}\r\n                                    label={LABELS.ADDRESS}\r\n                                    rules={STANDART_ITEM_RULES}\r\n                                    required\r\n                                >\r\n                                    <Input size={COMPONENT_SIZE} />\r\n                                </Item>\r\n                            </Col>\r\n                            <Col sm={24}>\r\n                                <PassportData\r\n                                    namespace={IDS.INSURANT}\r\n                                    disablesSerial={insuredIsInsurant}\r\n                                    disablesNumber={insuredIsInsurant}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </CalcCard>\r\n                )\r\n            }}\r\n        </Item>\r\n    )\r\n}\r\n\r\nexport default InsurantInfo\r\n","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport IDS from '../../../constants/ids'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\n\r\nconst {Item, List} = Form,\r\n    {Group, Button} = Radio\r\n\r\ninterface InsuredIsInsurantPropsInterface {\r\n    adultInsureds: any\r\n    onInsuredSelect: () => void\r\n    onReset: () => void\r\n}\r\n\r\nconst InsuredIsInsurant: FC<InsuredIsInsurantPropsInterface> = ({\r\n    adultInsureds,\r\n    onInsuredSelect,\r\n    onReset,\r\n}) => {\r\n    return (\r\n        <div style={{marginBottom: 16}}>\r\n            <p>Сделать страхователем одного из застрахованных?</p>\r\n            <div className={'e-insurant-info__insureds'}>\r\n                <Item name={IDS.INSURED_IS_INSURANT_ID}>\r\n                    <Group size={'small'} onChange={onInsuredSelect}>\r\n                        {adultInsureds.map((insured, i) => (\r\n                            <Button value={i} key={i}>\r\n                                {insured[IDS.LAST_NAME]}{' '}\r\n                                {insured[IDS.FIRST_NAME]}\r\n                            </Button>\r\n                        ))}\r\n                    </Group>\r\n                </Item>\r\n                <span className={'e-insurant-info__reset'} onClick={onReset}>\r\n                    сброс\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InsuredIsInsurant\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, useCallback} from 'react'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport Button from 'antd/lib/button'\r\nimport 'antd/lib/button/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport {UserAddOutlined} from '@ant-design/icons'\r\nimport * as moment from 'moment'\r\nimport {COMPONENT_SIZE, MAX_NUMBER_OF_INSURED} from '../../constants'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Date from '../../../../../common/components/custom-form-components/date'\r\nimport IDS from '../../constants/ids'\r\nimport MinusCircleOutlined from '@ant-design/icons/lib/icons/MinusCircleOutlined'\r\nimport './index.less'\r\nimport resetInsuredIsInsurant from '../../helpers/reset-insured-is-insurant'\r\n\r\ninterface InsuredBirthdaysPropsInterface {\r\n    form: FormInstance\r\n}\r\n\r\nconst {Item, List} = Form\r\n\r\nconst validator = async (r, v) => {\r\n    if (!v) return Promise.reject('Введите дату')\r\n    if (v > moment()) return Promise.reject('Неверная дата')\r\n    return Promise.resolve()\r\n}\r\n\r\nconst InsuredBirthdays: FC<InsuredBirthdaysPropsInterface> = ({form}) => {\r\n    const handleRemoveOrChangeDate = useCallback(() => {\r\n        if (form.getFieldValue(IDS.INSURED_IS_INSURANT_ID) !== null)\r\n            resetInsuredIsInsurant(form)\r\n    }, [])\r\n\r\n    return (\r\n        <CalcCard>\r\n            <h2>Даты рождения застрахованных</h2>\r\n\r\n            <List name={IDS.INSUREDS}>\r\n                {(fields, {add, remove}) => {\r\n                    return (\r\n                        <Row>\r\n                            {fields.map(field => (\r\n                                <Col key={field.key}>\r\n                                    <Item\r\n                                        {...field}\r\n                                        name={[field.name, IDS.BIRTHDAY]}\r\n                                        fieldKey={[\r\n                                            field.fieldKey,\r\n                                            IDS.BIRTHDAY,\r\n                                        ]}\r\n                                        rules={[{validator}]}\r\n                                        className={'insured-birthdays__item'}\r\n                                    >\r\n                                        <Date\r\n                                            onChange={() =>\r\n                                                handleRemoveOrChangeDate()\r\n                                            }\r\n                                        />\r\n                                    </Item>\r\n                                    {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className={\r\n                                                'insured-birthdays__icon-minus'\r\n                                            }\r\n                                            onClick={() => {\r\n                                                remove(field.name)\r\n                                                handleRemoveOrChangeDate()\r\n                                            }}\r\n                                        />\r\n                                    ) : null}\r\n                                </Col>\r\n                            ))}\r\n\r\n                            <Col>\r\n                                <Button\r\n                                    className={'insured-birthdays__add-button'}\r\n                                    type={'dashed'}\r\n                                    size={COMPONENT_SIZE}\r\n                                    onClick={() => add()}\r\n                                    disabled={\r\n                                        fields.length === MAX_NUMBER_OF_INSURED\r\n                                    }\r\n                                >\r\n                                    <UserAddOutlined /> Добавить туриста\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }}\r\n            </List>\r\n        </CalcCard>\r\n    )\r\n}\r\n\r\nexport default InsuredBirthdays\r\n","import * as React from 'react'\r\nimport {ChangeEvent, FC} from 'react'\r\nimport IDS from '../../../constants/ids'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport {Col, Row} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Divider from 'antd/lib/divider'\r\nimport 'antd/lib/divider/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport LABELS from '../../../constants/labels'\r\nimport Date from '../../../../../../common/components/custom-form-components/date'\r\nimport {STANDART_ITEM_RULES} from '../../../../../common/constants'\r\nimport {COMPONENT_SIZE} from '../../../constants'\r\nimport Passport from '../passport'\r\nimport {useCallback} from 'react'\r\nimport {FormInstance} from 'antd/lib/form'\r\n\r\ninterface FieldListPropsInterface {\r\n    form: FormInstance\r\n    fields: any\r\n    passportTitle: string\r\n    russiaOnly: boolean\r\n\r\n    getValueFromEvent: (e: ChangeEvent) => void\r\n}\r\n\r\nconst {Item} = Form\r\n\r\nconst FieldList: FC<FieldListPropsInterface> = ({\r\n    form,\r\n    fields,\r\n    passportTitle,\r\n    russiaOnly,\r\n    getValueFromEvent,\r\n}) => {\r\n    const insuredIsInsurantId = form.getFieldValue(IDS.INSURED_IS_INSURANT_ID),\r\n        handleChange = useCallback((insuredId, fieldName) => {\r\n            const insured = form.getFieldValue(IDS.INSUREDS)[insuredId]\r\n\r\n            form.setFieldsValue({\r\n                [IDS.INSURANT]: {\r\n                    [fieldName]: insured[fieldName],\r\n                },\r\n            })\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            {fields.map((field, i) => {\r\n                const isInsurant = field.name === insuredIsInsurantId\r\n\r\n                let handleLastNameChange,\r\n                    handleFirstNameChange,\r\n                    handleMiddleNameChange,\r\n                    handlePassportSerial,\r\n                    handlePassportNumber\r\n\r\n                if (isInsurant) {\r\n                    handleLastNameChange = () => {\r\n                        handleChange(field.name, IDS.LAST_NAME)\r\n                    }\r\n                    handleFirstNameChange = () => {\r\n                        handleChange(field.name, IDS.FIRST_NAME)\r\n                    }\r\n                    handleMiddleNameChange = () => {\r\n                        handleChange(field.name, IDS.MIDDLE_NAME)\r\n                    }\r\n                    handlePassportSerial = () => {\r\n                        handleChange(field.name, IDS.PASSPORT_SERIAL)\r\n                    }\r\n                    handlePassportNumber = () => {\r\n                        handleChange(field.name, IDS.PASSPORT_NUMBER)\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    <Row gutter={{sm: 8, md: 16, xl: 24}} key={field.key}>\r\n                        {i > 0 ? (\r\n                            <Col sm={24}>\r\n                                <Divider />\r\n                            </Col>\r\n                        ) : null}\r\n                        <Col>\r\n                            <Item\r\n                                {...field}\r\n                                name={[field.name, IDS.BIRTHDAY]}\r\n                                fieldKey={[field.name, IDS.BIRTHDAY]}\r\n                                label={LABELS.BIRTHDAY}\r\n                                required\r\n                            >\r\n                                <Date disabled={true} />\r\n                            </Item>\r\n                        </Col>\r\n                        <Col>\r\n                            <Item\r\n                                {...field}\r\n                                name={[field.name, IDS.LAST_NAME]}\r\n                                fieldKey={[field.fieldKey, IDS.LAST_NAME]}\r\n                                label={LABELS.LAST_NAME}\r\n                                rules={STANDART_ITEM_RULES}\r\n                                getValueFromEvent={getValueFromEvent}\r\n                                required\r\n                            >\r\n                                <Input\r\n                                    size={COMPONENT_SIZE}\r\n                                    onChange={handleLastNameChange}\r\n                                />\r\n                            </Item>\r\n                        </Col>\r\n                        <Col>\r\n                            <Item\r\n                                {...field}\r\n                                name={[field.name, IDS.FIRST_NAME]}\r\n                                fieldKey={[field.fieldKey, IDS.FIRST_NAME]}\r\n                                label={LABELS.FIRST_NAME}\r\n                                rules={STANDART_ITEM_RULES}\r\n                                getValueFromEvent={getValueFromEvent}\r\n                                required\r\n                            >\r\n                                <Input\r\n                                    size={COMPONENT_SIZE}\r\n                                    onChange={handleFirstNameChange}\r\n                                />\r\n                            </Item>\r\n                        </Col>\r\n                        {russiaOnly ? (\r\n                            <Col>\r\n                                <Item\r\n                                    {...field}\r\n                                    name={[field.name, IDS.MIDDLE_NAME]}\r\n                                    fieldKey={[field.fieldKey, IDS.MIDDLE_NAME]}\r\n                                    label={LABELS.MIDDLE_NAME}\r\n                                    rules={STANDART_ITEM_RULES}\r\n                                    getValueFromEvent={getValueFromEvent}\r\n                                    required\r\n                                >\r\n                                    <Input\r\n                                        size={COMPONENT_SIZE}\r\n                                        onChange={handleMiddleNameChange}\r\n                                    />\r\n                                </Item>\r\n                            </Col>\r\n                        ) : null}\r\n                        <Col sm={24}>\r\n                            <Passport\r\n                                field={field}\r\n                                title={passportTitle}\r\n                                onSerialChange={handlePassportSerial}\r\n                                onNumberChange={handlePassportNumber}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FieldList\r\n","import * as React from 'react'\r\nimport {FC, memo, useCallback} from 'react'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport Divider from 'antd/lib/divider'\r\nimport 'antd/lib/divider/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport IDS from '../../constants/ids'\r\nimport Date from '../../../../../common/components/custom-form-components/date'\r\nimport LABELS from '../../constants/labels'\r\nimport {COMPONENT_SIZE, RF_ONLY_ID} from '../../constants'\r\nimport Passport from './passport'\r\nimport {STANDART_ITEM_RULES} from '../../../../common/constants'\r\nimport handleInputOnlyEnglish from '../../../../../common/helpers/for-get-value-from-event/handle-input-only-english'\r\nimport handleInputOnlyRussian from '../../../../../common/helpers/for-get-value-from-event/handle-input-only-russian'\r\nimport FieldList from './field-list'\r\n\r\nconst {Item, List} = Form\r\n\r\ninterface InsuredsInfoPropsInterface {\r\n    form: FormInstance\r\n}\r\n\r\nconst InsuredsInfo: FC<InsuredsInfoPropsInterface> = memo(({form}) => {\r\n    return (\r\n        <Item\r\n            shouldUpdate={(prevValues, currentValues) =>\r\n                prevValues[IDS.COUNTRIES] !== currentValues[IDS.COUNTRIES] ||\r\n                prevValues[IDS.INSURED_IS_INSURANT_ID] !==\r\n                    currentValues[IDS.INSURED_IS_INSURANT_ID]\r\n            }\r\n            noStyle\r\n        >\r\n            {({getFieldValue}) => {\r\n                const russiaOnly = getFieldValue(IDS.COUNTRIES).includes(\r\n                    RF_ONLY_ID\r\n                )\r\n\r\n                let titlePart = '(заполните на английском языке)',\r\n                    passportTitle = 'Данные загранпаспорта',\r\n                    getValueFromEvent = handleInputOnlyEnglish\r\n\r\n                if (russiaOnly) {\r\n                    titlePart = ''\r\n                    passportTitle = undefined\r\n                    getValueFromEvent = handleInputOnlyRussian\r\n                }\r\n\r\n                return (\r\n                    <CalcCard>\r\n                        <h2>Информация о застрахованных {titlePart}</h2>\r\n\r\n                        <List name={IDS.INSUREDS}>\r\n                            {fields => (\r\n                                <FieldList\r\n                                    form={form}\r\n                                    russiaOnly={russiaOnly}\r\n                                    passportTitle={passportTitle}\r\n                                    getValueFromEvent={getValueFromEvent}\r\n                                    fields={fields}\r\n                                />\r\n                            )}\r\n                        </List>\r\n                    </CalcCard>\r\n                )\r\n            }}\r\n        </Item>\r\n    )\r\n})\r\n\r\nexport default InsuredsInfo\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport IDS from '../../../constants/ids'\r\nimport LABELS from '../../../constants/labels'\r\nimport {COMPONENT_SIZE} from '../../../constants'\r\nimport {STANDART_ITEM_RULES} from '../../../../../common/constants'\r\n\r\nconst {Item} = Form\r\n\r\ninterface FieldData {\r\n    name: number\r\n    key: number\r\n    fieldKey: number\r\n}\r\n\r\ninterface PassportPropsInterface {\r\n    field: FieldData\r\n    title?: string\r\n    onSerialChange?: () => void\r\n    onNumberChange?: () => void\r\n}\r\n\r\nconst Passport: FC<PassportPropsInterface> = memo(\r\n    ({field, title = 'Паспорт РФ', onSerialChange, onNumberChange}) => {\r\n        return (\r\n            <Row gutter={{sm: 8, md: 16, xl: 24}}>\r\n                <Col xs={24} sm={24}>\r\n                    <h3>{title}</h3>\r\n                </Col>\r\n                <Col xs={6} sm={4}>\r\n                    <Item\r\n                        {...field}\r\n                        name={[field.name, IDS.PASSPORT_SERIAL]}\r\n                        fieldKey={[field.fieldKey, IDS.PASSPORT_SERIAL]}\r\n                        label={LABELS.SERIAL}\r\n                        rules={STANDART_ITEM_RULES}\r\n                        required\r\n                    >\r\n                        <Input\r\n                            size={COMPONENT_SIZE}\r\n                            onChange={onSerialChange}\r\n                        />\r\n                    </Item>\r\n                </Col>\r\n                <Col xs={9} sm={6}>\r\n                    <Item\r\n                        {...field}\r\n                        name={[field.name, IDS.PASSPORT_NUMBER]}\r\n                        fieldKey={[field.fieldKey, IDS.PASSPORT_NUMBER]}\r\n                        label={LABELS.NUMBER}\r\n                        rules={STANDART_ITEM_RULES}\r\n                        required\r\n                    >\r\n                        <Input\r\n                            size={COMPONENT_SIZE}\r\n                            onChange={onNumberChange}\r\n                        />\r\n                    </Item>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n)\r\n\r\nexport default Passport\r\n","import * as React from 'react'\r\nimport {FC, useCallback} from 'react'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport {Moment} from 'moment'\r\nimport {\r\n    DATE_PICKER_PLACEHOLDER,\r\n    OUTPUT_DATE_FORMAT,\r\n    SCREEN_IS_SMALL,\r\n} from '../../../../common/constants'\r\nimport Date from '../../../../../common/components/custom-form-components/date'\r\nimport DatePicker from 'antd/lib/date-picker'\r\nimport 'antd/lib/date-picker/style'\r\nimport IDS from '../../constants/ids'\r\nimport {COMPONENT_SIZE} from '../../constants'\r\nimport ru_RU from 'antd/es/date-picker/locale/ru_RU'\r\n\r\ninterface MultipleTripPropsInterface {\r\n    form: FormInstance\r\n    minStartDate: Moment\r\n}\r\n\r\nconst {Item} = Form\r\n\r\nconst MultipleTrip: FC<MultipleTripPropsInterface> = ({minStartDate}) => {\r\n    const validatorStartDate = useCallback(async (r, v) => {\r\n        if (!v) return Promise.reject('Введите дату')\r\n        if (v < minStartDate) return Promise.reject('Неверная дата')\r\n        return Promise.resolve()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2>Дата начала действия</h2>\r\n\r\n            <Item\r\n                name={IDS.PERIOD_START_DATE}\r\n                colon={false}\r\n                labelCol={{sm: 24}}\r\n                rules={[{validator: validatorStartDate}]}\r\n            >\r\n                {SCREEN_IS_SMALL ? (\r\n                    <Date />\r\n                ) : (\r\n                    <DatePicker\r\n                        locale={ru_RU}\r\n                        showToday={false}\r\n                        disabledDate={current => current < minStartDate}\r\n                        format={OUTPUT_DATE_FORMAT}\r\n                        size={COMPONENT_SIZE}\r\n                        placeholder={DATE_PICKER_PLACEHOLDER}\r\n                    />\r\n                )}\r\n            </Item>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MultipleTrip\r\n","import * as React from 'react'\r\nimport {FC, useCallback, useState} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport {COMPONENT_SIZE} from '../../constants'\r\nimport PROMOCODES from '../../constants/promocodes'\r\nimport {ValidateStatus} from 'antd/lib/form/FormItem'\r\nimport LABELS from '../../constants/labels'\r\nimport IDS from '../../constants/ids'\r\n\r\nconst {Item} = Form\r\n\r\ninterface PromocodeItemPropsInterface {\r\n    onValid: (fieldName: string | string[]) => void\r\n    onNotValid: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst PromocodeItem: FC<PromocodeItemPropsInterface> = ({\r\n    onValid,\r\n    onNotValid,\r\n}) => {\r\n    const [validateStatus, setValidateStatus] = useState<ValidateStatus>(''),\r\n        validator = useCallback(\r\n            (r, v) => {\r\n                v = v.toLowerCase()\r\n                if (v === '') {\r\n                    setValidateStatus('error')\r\n                    onNotValid(IDS.PROMOCODE)\r\n                    return Promise.reject('Введите промокод')\r\n                }\r\n                if (!PROMOCODES.some(cur => v === cur.promocode)) {\r\n                    setValidateStatus('warning')\r\n                    onNotValid(IDS.PROMOCODE)\r\n                    return Promise.reject('Неверный промокод')\r\n                }\r\n                setValidateStatus('success')\r\n                onValid(IDS.PROMOCODE)\r\n                return Promise.resolve()\r\n            },\r\n            [onValid]\r\n        )\r\n\r\n    return (\r\n        <Item\r\n            name={IDS.PROMOCODE}\r\n            label={LABELS.PROMOCODE}\r\n            rules={[{validator}]}\r\n            validateStatus={validateStatus}\r\n        >\r\n            <Input size={COMPONENT_SIZE} />\r\n        </Item>\r\n    )\r\n}\r\n\r\nexport default PromocodeItem\r\n","import * as React from 'react'\r\nimport {FC, Suspense} from 'react'\r\nimport Promocode from '../promocode'\r\nimport siteIsOwnedByEuroins from '../../../../../common/helpers/site-is-owned-by-euroins'\r\nimport {FormInstance} from 'antd/lib/form'\r\nimport GlobalOptionsInterface from '../../types/global-options'\r\n\r\ninterface PromocodeOrBonusesWrapperPropsInterface {\r\n    form: FormInstance\r\n    cost: number\r\n    globalOptions: GlobalOptionsInterface\r\n    onValueChange: (fieldName: string | string[]) => void\r\n    bonusesSystemIsOn: boolean\r\n}\r\n\r\n// const PromocodeOrBonuses = React.lazy(() =>\r\n//     import(\r\n//         /* webpackChunkName: \"PromocodeOrBonuses\" */ '../promocode-or-bonuses/index'\r\n//     )\r\n// )\r\n\r\nconst PromocodeOrBonusesWrapper: FC<PromocodeOrBonusesWrapperPropsInterface> = ({\r\n    form,\r\n    cost,\r\n    globalOptions,\r\n    onValueChange,\r\n    bonusesSystemIsOn,\r\n}) => {\r\n    // Данный функционал только для сайтов ЕВРОИНС\r\n    // if (!siteIsOwnedByEuroins()) return\r\n\r\n    // todo - хорошо потестить с бонусами\r\n\r\n    // if (bonusesSystemIsOn)\r\n    //     return (\r\n    //         <Suspense fallback={'Загрузка компонента бонусов и промокодов...'}>\r\n    //             <PromocodeOrBonuses\r\n    //                 cost={cost}\r\n    //                 globalOptions={globalOptions}\r\n    //                 onValueChange={onValueChange}\r\n    //             />\r\n    //         </Suspense>\r\n    //     )\r\n     return <Promocode form={form} onValueChange={onValueChange} />\r\n}\r\n\r\nexport default PromocodeOrBonusesWrapper\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, useCallback, useState} from 'react'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport Checkbox from 'antd/lib/checkbox'\r\nimport 'antd/lib/checkbox/style'\r\nimport PromocodeItem from '../promocode-item'\r\nimport IDS from '../../constants/ids'\r\nimport './index.less'\r\n\r\nconst {Item} = Form\r\n\r\ninterface PromocodePropsInterface {\r\n    form: FormInstance\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst Promocode: FC<PromocodePropsInterface> = ({\r\n    form: {setFieldsValue, validateFields},\r\n    onValueChange,\r\n}) => {\r\n    const [checked, setChecked] = useState<boolean>(false),\r\n        handleChange = useCallback(e => {\r\n            setFieldsValue({[IDS.PROMOCODE]: ''})\r\n            onValueChange(IDS.PROMOCODE)\r\n            validateFields([IDS.PROMOCODE]).then()\r\n            setChecked(e.target.checked)\r\n        }, [])\r\n\r\n    return (\r\n        <CalcCard>\r\n            <Checkbox\r\n                className={checked ? 'promocode__checkbox_margin_bottom' : ''}\r\n                onChange={handleChange}\r\n            >\r\n                <span> У меня есть промокод</span>\r\n            </Checkbox>\r\n            <Row>\r\n                <Col xs={24} sm={12} lg={5}>\r\n                    {checked ? (\r\n                        <PromocodeItem\r\n                            onValid={() => onValueChange(IDS.PROMOCODE)}\r\n                            onNotValid={() => onValueChange(IDS.PROMOCODE)}\r\n                        />\r\n                    ) : null}\r\n                </Col>\r\n            </Row>\r\n        </CalcCard>\r\n    )\r\n}\r\n\r\nexport default Promocode\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Card from 'antd/lib/card'\r\nimport 'antd/lib/card/style'\r\nimport Switch from 'antd/lib/switch'\r\nimport 'antd/lib/switch/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\nimport './index.less'\r\nimport IDS from '../../constants/ids'\r\nimport {useCallback} from 'react'\r\nimport divideIntegerBySpace from '../../../../../common/helpers/divide-integer-by-space'\r\n\r\nconst {Item} = Form,\r\n    {Group} = Radio\r\n\r\ninterface SecondProgramPropsInterface {\r\n    id: string\r\n    name: string\r\n    sums: number[]\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst SecondProgram: FC<SecondProgramPropsInterface> = memo(\r\n    ({id, name, sums, onValueChange}) => {\r\n        const handleChange = useCallback(() => {\r\n            onValueChange([IDS.SECOND_PROGRAMS, id])\r\n        }, [onValueChange])\r\n\r\n        return (\r\n            <Card\r\n                className={'e-second-program'}\r\n                title={\r\n                    <span className={'e-second-program__title'}>\r\n                        <img\r\n                            className={'e-second-program__icon'}\r\n                            src={`https://euro-ins.ru/front/dist/img/calc/icon/secondPrograms/${id}.png`}\r\n                            alt={'Иконка риска'}\r\n                        />\r\n                        <br />\r\n                        {name}\r\n                    </span>\r\n                }\r\n                extra={\r\n                    <Item shouldUpdate={true}>\r\n                        {({getFieldValue, setFieldsValue}) => {\r\n                            const checked =\r\n                                    getFieldValue([IDS.SECOND_PROGRAMS, id]) !==\r\n                                    undefined,\r\n                                handleChange = checked => {\r\n                                    let value\r\n\r\n                                    if (checked) value = sums[0]\r\n\r\n                                    setFieldsValue({\r\n                                        [IDS.SECOND_PROGRAMS]: {[id]: value},\r\n                                    })\r\n                                    onValueChange([IDS.SECOND_PROGRAMS, id])\r\n                                }\r\n\r\n                            return (\r\n                                <Switch\r\n                                    checked={checked}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            )\r\n                        }}\r\n                    </Item>\r\n                }\r\n            >\r\n                <Item\r\n                    name={[IDS.SECOND_PROGRAMS, id]}\r\n                    className={'item_without-margin'}\r\n                >\r\n                    <Group onChange={handleChange}>\r\n                        {sums.map(sum => (\r\n                            <Radio value={sum} key={sum}>\r\n                                {divideIntegerBySpace(sum)}\r\n                            </Radio>\r\n                        ))}\r\n                    </Group>\r\n                </Item>\r\n            </Card>\r\n        )\r\n    }\r\n)\r\n\r\nexport default SecondProgram\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport SECOND_PROGRAMS, {\r\n    SECOND_PROGRAMS_RUS,\r\n} from '../../constants/second-programs'\r\nimport SecondProgram from '../second-program'\r\nimport IDS from '../../constants/ids'\r\nimport {RF_ONLY_ID} from '../../constants'\r\n\r\ninterface SecondProgramsPropsInterface {\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst {Item} = Form\r\n\r\nconst SecondPrograms: FC<SecondProgramsPropsInterface> = memo(\r\n    ({onValueChange}) => {\r\n        return (\r\n            <CalcCard>\r\n                <h2>Рекомендуем добавить опции</h2>\r\n\r\n                <Row gutter={16}>\r\n                    <Item\r\n                        shouldUpdate={(prevValues, currentValues) =>\r\n                            prevValues[IDS.COUNTRIES] !==\r\n                            currentValues[IDS.COUNTRIES]\r\n                        }\r\n                        noStyle\r\n                    >\r\n                        {({getFieldValue}) => {\r\n                            const selectedCountries = getFieldValue(\r\n                                IDS.COUNTRIES\r\n                            )\r\n\r\n                            if (selectedCountries.includes(RF_ONLY_ID))\r\n                                return SECOND_PROGRAMS_RUS.map(program => (\r\n                                    <Col md={24} lg={8} key={program.id}>\r\n                                        <SecondProgram\r\n                                            {...program}\r\n                                            onValueChange={onValueChange}\r\n                                        />\r\n                                    </Col>\r\n                                ))\r\n                            else\r\n                                return SECOND_PROGRAMS.map(program => (\r\n                                    <Col md={24} lg={8} key={program.id}>\r\n                                        <SecondProgram\r\n                                            {...program}\r\n                                            onValueChange={onValueChange}\r\n                                        />\r\n                                    </Col>\r\n                                ))\r\n                        }}\r\n                    </Item>\r\n                </Row>\r\n            </CalcCard>\r\n        )\r\n    }\r\n)\r\n\r\nexport default SecondPrograms\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, useCallback, useState} from 'react'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/row/style'\r\nimport Col from 'antd/lib/col'\r\nimport 'antd/lib/col/style'\r\nimport Select from 'antd/lib/select'\r\nimport 'antd/lib/select/style'\r\nimport Alert from 'antd/lib/alert'\r\nimport 'antd/lib/alert/style'\r\nimport DatePicker from 'antd/lib/date-picker'\r\nimport 'antd/lib/date-picker/style'\r\nimport Date from '../../../../../common/components/custom-form-components/date'\r\nimport RangeIterator from '../../../../../common/helpers/range-iterator'\r\nimport IDS from '../../constants/ids'\r\nimport LABELS from '../../constants/labels'\r\nimport './index.less'\r\nimport {COMPONENT_SIZE} from '../../constants'\r\nimport {\r\n    DATE_PICKER_PLACEHOLDER,\r\n    OUTPUT_DATE_FORMAT,\r\n    SCREEN_IS_SMALL,\r\n} from '../../../../common/constants'\r\nimport {Moment} from 'moment'\r\n\r\ninterface SingleTripPropsInterface {\r\n    form: FormInstance\r\n    minStartDate: Moment\r\n}\r\n\r\nconst {Option} = Select,\r\n    {Item} = Form,\r\n    getOptions = (from, to) => {\r\n        const rangeDaysIterator = new RangeIterator(from, to),\r\n            arrayOptions = []\r\n\r\n        for (const day of rangeDaysIterator) {\r\n            arrayOptions.push(\r\n                <Option key={day} value={day}>\r\n                    {day}\r\n                </Option>\r\n            )\r\n        }\r\n\r\n        return arrayOptions\r\n    }\r\n\r\nconst SingleTrip: FC<SingleTripPropsInterface> = ({\r\n    form,\r\n    form: {getFieldValue, setFieldsValue},\r\n    minStartDate,\r\n}) => {\r\n    const [showAlert, setShowAlert] = useState<boolean>(false),\r\n        getMaxNumberOfDays = useCallback(() => {\r\n            const startDate = getFieldValue(IDS.PERIOD_START_DATE),\r\n                endDate = getFieldValue(IDS.PERIOD_END_DATE)\r\n            if (startDate && endDate)\r\n                return Math.round(endDate.diff(startDate, 'days', true)) + 1\r\n            return 1\r\n        }, []),\r\n        setNumberOfDays = useCallback((startDate, endDate) => {\r\n            if (startDate && endDate)\r\n                setFieldsValue({\r\n                    [IDS.NUMBER_OF_DAYS]:\r\n                        Math.round(endDate.diff(startDate, 'days', true)) + 1,\r\n                })\r\n        }, []),\r\n        handleNumberOfDaysChange = useCallback(() => {\r\n            const startDate = getFieldValue(IDS.PERIOD_START_DATE),\r\n                endDate = getFieldValue(IDS.PERIOD_END_DATE),\r\n                numberOfDays = getFieldValue(IDS.NUMBER_OF_DAYS),\r\n                datesAreEntered = !!(startDate && endDate),\r\n                numberOfDaysLessPeriod =\r\n                    datesAreEntered &&\r\n                    numberOfDays <\r\n                        Math.round(endDate.diff(startDate, 'days', true)) + 1\r\n            if (numberOfDaysLessPeriod) setShowAlert(true)\r\n            else setShowAlert(false)\r\n        }, []),\r\n        commonValidator = useCallback(async (r, v) => {\r\n            if (!v) return Promise.reject('Введите дату')\r\n            // если выбранная дата меньше минимальной даты\r\n            if (v < minStartDate) return Promise.reject('Неверная дата')\r\n            return Promise.resolve()\r\n        }, []),\r\n        validatorStartDate = useCallback(async (r, v) => {\r\n            return commonValidator(r, v)\r\n                .then(() => {\r\n                    const endDate = getFieldValue(IDS.PERIOD_END_DATE)\r\n                    // Если дату окончания еще не ввели, то пока не проверяем\r\n                    if (!endDate) return Promise.resolve()\r\n                    // Если дата окончания введена и\r\n                    // если дата начала позже даты окончания, то не валидно\r\n                    if (endDate && v > endDate)\r\n                        return Promise.reject(\r\n                            'Дата начала не может быть позднее даты окончания'\r\n                        )\r\n                    return Promise.resolve()\r\n                })\r\n                .catch(error => Promise.reject(error))\r\n        }, []),\r\n        validatorEndDate = useCallback(async (r, v) => {\r\n            return commonValidator(r, v)\r\n                .then(() => {\r\n                    const startDate = getFieldValue(IDS.PERIOD_START_DATE)\r\n                    // Если дату окончания еще не ввели, то пока не проверяем\r\n                    if (!startDate) return Promise.resolve()\r\n                    // Если дата начала введена и\r\n                    // если дата начала позже даты окончания, то не валидно\r\n                    if (startDate && v < startDate)\r\n                        return Promise.reject(\r\n                            'Дата окончания должна быть раньше даты начала'\r\n                        )\r\n                    return Promise.resolve()\r\n                })\r\n                .catch(error => Promise.reject(error))\r\n        }, []),\r\n        handlePeriodStartDateChange = useCallback(() => {\r\n            form.validateFields([IDS.PERIOD_END_DATE]).then(values => {\r\n                // Если все хорошо, выставляем кол-во дней\r\n                setNumberOfDays(\r\n                    getFieldValue(IDS.PERIOD_START_DATE),\r\n                    values[IDS.PERIOD_END_DATE]\r\n                )\r\n                handleNumberOfDaysChange()\r\n            })\r\n        }, [setNumberOfDays]),\r\n        handlePeriodEndDateChange = useCallback(() => {\r\n            form.validateFields([IDS.PERIOD_START_DATE]).then(values => {\r\n                // Если все хорошо, выставляем кол-во дней\r\n                setNumberOfDays(\r\n                    values[IDS.PERIOD_START_DATE],\r\n                    getFieldValue(IDS.PERIOD_END_DATE)\r\n                )\r\n                handleNumberOfDaysChange()\r\n            })\r\n        }, [])\r\n\r\n    return (\r\n        <Row>\r\n            <Col sm={12}>\r\n                <h2>Период страхования</h2>\r\n\r\n                <Row gutter={16}>\r\n                    <Col>\r\n                        <Item\r\n                            label={LABELS.PERIOD_START_DATE}\r\n                            name={IDS.PERIOD_START_DATE}\r\n                            labelCol={{sm: 24}}\r\n                            colon={false}\r\n                            rules={[\r\n                                {\r\n                                    validator: validatorStartDate,\r\n                                },\r\n                            ]}\r\n                            required\r\n                        >\r\n                            {SCREEN_IS_SMALL ? (\r\n                                <Date onChange={handlePeriodStartDateChange} />\r\n                            ) : (\r\n                                <DatePicker\r\n                                    disabledDate={current =>\r\n                                        current < minStartDate\r\n                                    }\r\n                                    format={OUTPUT_DATE_FORMAT}\r\n                                    size={COMPONENT_SIZE}\r\n                                    onChange={handlePeriodStartDateChange}\r\n                                    placeholder={DATE_PICKER_PLACEHOLDER}\r\n                                />\r\n                            )}\r\n                        </Item>\r\n                    </Col>\r\n                    <Col>\r\n                        <Item\r\n                            label={LABELS.PERIOD_END_DATE}\r\n                            name={IDS.PERIOD_END_DATE}\r\n                            labelCol={{sm: 24}}\r\n                            colon={false}\r\n                            rules={[\r\n                                {\r\n                                    validator: validatorEndDate,\r\n                                },\r\n                            ]}\r\n                            required\r\n                        >\r\n                            {SCREEN_IS_SMALL ? (\r\n                                <Date onChange={handlePeriodEndDateChange} />\r\n                            ) : (\r\n                                <DatePicker\r\n                                    disabledDate={current =>\r\n                                        current < minStartDate\r\n                                    }\r\n                                    format={OUTPUT_DATE_FORMAT}\r\n                                    size={COMPONENT_SIZE}\r\n                                    onChange={handlePeriodEndDateChange}\r\n                                    placeholder={DATE_PICKER_PLACEHOLDER}\r\n                                />\r\n                            )}\r\n                        </Item>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col sm={12}>\r\n                <h2>Количество дней</h2>\r\n\r\n                <Item\r\n                    className={'single-trip__item-wrapper'}\r\n                    label={<span>&nbsp;</span>}\r\n                    labelCol={{sm: 24}}\r\n                    colon={false}\r\n                    shouldUpdate={(prevValues, currentValues) => {\r\n                        // console.log(rest)\r\n                        return (\r\n                            prevValues[IDS.PERIOD_START_DATE] !==\r\n                                currentValues[IDS.PERIOD_START_DATE] ||\r\n                            prevValues[IDS.PERIOD_END_DATE] !==\r\n                                currentValues[IDS.PERIOD_END_DATE]\r\n                        )\r\n                    }}\r\n                >\r\n                    {({getFieldValue}: FormInstance) => {\r\n                        const startDate = getFieldValue(IDS.PERIOD_START_DATE),\r\n                            endDate = getFieldValue(IDS.PERIOD_END_DATE),\r\n                            datesAreEntered = !!(startDate && endDate)\r\n\r\n                        return (\r\n                            <Item\r\n                                name={IDS.NUMBER_OF_DAYS}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Выберете количество дней',\r\n                                    },\r\n                                ]}\r\n                                required\r\n                            >\r\n                                <Select\r\n                                    className={'single-trip__days-amount'}\r\n                                    placeholder={'Дни'}\r\n                                    disabled={!datesAreEntered}\r\n                                    size={COMPONENT_SIZE}\r\n                                    onChange={handleNumberOfDaysChange}\r\n                                >\r\n                                    {getOptions(1, getMaxNumberOfDays())}\r\n                                </Select>\r\n                            </Item>\r\n                        )\r\n                    }}\r\n                </Item>\r\n            </Col>\r\n            {showAlert && (\r\n                <Col sm={24}>\r\n                    <br />\r\n                    <Alert\r\n                        message={'Количество дней меньше периода страхования'}\r\n                        type={'warning'}\r\n                        showIcon\r\n                    />\r\n                </Col>\r\n            )}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default SingleTrip\r\n","import * as React from 'react'\r\nimport {FC, memo, useCallback, useEffect, useState} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Select from 'antd/lib/select'\r\nimport 'antd/lib/select/style'\r\nimport IDS from '../../constants/ids'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport {SportsType} from '../../types/models/sport'\r\nimport {COMPONENT_SIZE} from '../../constants'\r\nimport LABELS from '../../constants/labels'\r\nimport SportsStateType from '../../types/state/sports-state'\r\nimport {\r\n    createErrorState,\r\n    createInitialState,\r\n    createStartedState,\r\n    createSuccessState,\r\n} from '../../../../../common/helpers/create-request-state'\r\nimport Api from '../../classes/api'\r\n\r\nconst {Item} = Form,\r\n    {Option} = Select,\r\n    initState = createInitialState<SportsType>()\r\n\r\ninterface SportSelectionPropsInterface {\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst SportSelection: FC<SportSelectionPropsInterface> = memo(\r\n    ({onValueChange}) => {\r\n        const [sports, setSports] = useState<SportsStateType>(initState),\r\n            handleComponentDidMount = useCallback(async () => {\r\n                setSports(createStartedState())\r\n                const result = await Api.getSports()\r\n                if ('errors' in result) return createErrorState(result.errors)\r\n                setSports(createSuccessState(result))\r\n            }, []),\r\n            handleSelect = useCallback(() => {\r\n                onValueChange(IDS.SPORTS)\r\n            }, [onValueChange])\r\n\r\n        useEffect(() => {\r\n            handleComponentDidMount().then()\r\n        }, [])\r\n\r\n        return (\r\n            <CalcCard>\r\n                <h2>Активный отдых</h2>\r\n\r\n                <Item name={IDS.SPORTS} label={LABELS.SPORTS}>\r\n                    <Select\r\n                        mode={'multiple'}\r\n                        placeholder={'Выберите вид спорта'}\r\n                        size={COMPONENT_SIZE}\r\n                        loading={sports.requestStatus === 'started'}\r\n                        onSelect={handleSelect}\r\n                        onDeselect={handleSelect}\r\n                        showSearch\r\n                        optionFilterProp={'children'}\r\n                    >\r\n                        {sports.data !== null &&\r\n                            sports.data.map(sport => (\r\n                                <Option value={sport.id} key={sport.id}>\r\n                                    {sport.name}\r\n                                </Option>\r\n                            ))}\r\n                    </Select>\r\n                </Item>\r\n            </CalcCard>\r\n        )\r\n    }\r\n)\r\n\r\nexport default SportSelection\r\n","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Radio from 'antd/lib/radio'\r\nimport 'antd/lib/radio/style'\r\nimport IDS from '../../constants/ids'\r\nimport {INSURANCE_SUMS, INSURANCE_SUMS_RUS, RF_ONLY_ID} from '../../constants'\r\nimport {useCallback} from 'react'\r\nimport divideIntegerBySpace from '../../../../../common/helpers/divide-integer-by-space'\r\n\r\nconst {Item} = Form,\r\n    {Group} = Radio\r\n\r\ninterface SumsPropsInterface {\r\n    onValueChange: (fieldName: string | string[]) => void\r\n}\r\n\r\nconst Sums: FC<SumsPropsInterface> = memo(({onValueChange}) => {\r\n    const handleChange = useCallback(() => {\r\n        onValueChange(IDS.INSURANCE_SUM)\r\n    }, [onValueChange])\r\n\r\n    return (\r\n        <>\r\n            <h2>Выберете страховую сумму</h2>\r\n\r\n            <Item\r\n                shouldUpdate={(prevValues, currentValues) =>\r\n                    prevValues[IDS.COUNTRIES] !== currentValues[IDS.COUNTRIES]\r\n                }\r\n            >\r\n                {({getFieldValue}) => {\r\n                    const selectedCountries = getFieldValue(IDS.COUNTRIES),\r\n                        arrayOfSums = selectedCountries.includes(RF_ONLY_ID)\r\n                            ? INSURANCE_SUMS_RUS\r\n                            : INSURANCE_SUMS\r\n\r\n                    return (\r\n                        <Item name={IDS.INSURANCE_SUM}>\r\n                            <Group onChange={handleChange}>\r\n                                {arrayOfSums.map(sum => (\r\n                                    <Radio value={sum} key={sum}>\r\n                                        {divideIntegerBySpace(sum)}\r\n                                    </Radio>\r\n                                ))}\r\n                            </Group>\r\n                        </Item>\r\n                    )\r\n                }}\r\n            </Item>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Sums\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport {FormInstance} from 'antd/lib/form'\r\nimport IDS from '../../constants/ids'\r\nimport SingleTrip from '../single-trip'\r\nimport {Moment} from 'moment'\r\nimport {MIN_START_DATE} from '../../constants'\r\nimport './index.less'\r\nimport MultipleTrip from '../multiple-trip'\r\n\r\ninterface TripDatesPropsInterface {\r\n    // form: FormInstance\r\n    minStartDate?: Moment\r\n}\r\n\r\nconst {Item} = Form\r\n\r\nconst TripDates: FC<TripDatesPropsInterface> = ({\r\n    minStartDate = MIN_START_DATE,\r\n}) => {\r\n    return (\r\n        <CalcCard>\r\n            <Item\r\n                className={'trip-dates__item-wrapper'}\r\n                wrapperCol={{sm: 24}}\r\n                shouldUpdate={(prevValues, currentValues) =>\r\n                    prevValues[IDS.MULTI] !== currentValues[IDS.MULTI]\r\n                }\r\n            >\r\n                {(form: FormInstance) => {\r\n                    const isMulti = form.getFieldValue(IDS.MULTI)\r\n\r\n                    return isMulti ? (\r\n                        <MultipleTrip form={form} minStartDate={minStartDate} />\r\n                    ) : (\r\n                        <SingleTrip form={form} minStartDate={minStartDate} />\r\n                    )\r\n                }}\r\n            </Item>\r\n        </CalcCard>\r\n    )\r\n}\r\n\r\nexport default TripDates\r\n","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport Input from 'antd/lib/input'\r\nimport Step from '../../../../common/components/step'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport CountrySelection from '../country-selection'\r\nimport TripType from '../trip-type'\r\nimport TripDates from '../trip-dates'\r\nimport InsuredBirthdays from '../insured-birthdays'\r\n\r\ninterface TripParamsPropsInterface {\r\n    form: FormInstance\r\n}\r\n\r\nconst {Item} = Form\r\n\r\nconst TripParams: FC<TripParamsPropsInterface> = ({form}) => {\r\n    return (\r\n        <>\r\n            <CountrySelection form={form} />\r\n            <TripType form={form} />\r\n            <TripDates />\r\n            <InsuredBirthdays form={form} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TripParams\r\n","import * as React from 'react'\r\nimport {FC, memo, useCallback} from 'react'\r\nimport CalcCard from '../../../../common/components/calc-card'\r\nimport Form, {FormInstance} from 'antd/lib/form'\r\nimport Radio from 'antd/lib/radio'\r\nimport IDS from '../../constants/ids'\r\nimport {POSSIBLE_PERIODS_MULTI} from '../../constants'\r\n\r\ninterface TripTypePropsInterface {\r\n    form: FormInstance\r\n}\r\n\r\nconst {Item} = Form,\r\n    {Group} = Radio\r\n\r\nconst TripType: FC<TripTypePropsInterface> = memo(({form}) => {\r\n    const handleMultiChange = useCallback(() => {\r\n            form.setFieldsValue({[IDS.PERIOD_MULTI]: null})\r\n        }, []),\r\n        handlePeriodMultiChange = useCallback(() => {\r\n            form.setFieldsValue({[IDS.MULTI]: true})\r\n        }, [])\r\n\r\n    return (\r\n        <CalcCard>\r\n            <h2>Тип страховки</h2>\r\n\r\n            <Item name={IDS.MULTI}>\r\n                <Group onChange={handleMultiChange}>\r\n                    <Radio value={false}>Одна поездка</Radio>\r\n                </Group>\r\n            </Item>\r\n\r\n            <div>\r\n                <p>\r\n                    Многократные поездки в течение года.\r\n                    <br />\r\n                    Выберите количество застрахованных дней:\r\n                </p>\r\n            </div>\r\n            <Item name={IDS.PERIOD_MULTI}>\r\n                <Group onChange={handlePeriodMultiChange}>\r\n                    {POSSIBLE_PERIODS_MULTI.map(days => (\r\n                        <Radio value={days} key={days}>\r\n                            {days} из 365 дн.\r\n                        </Radio>\r\n                    ))}\r\n                </Group>\r\n            </Item>\r\n        </CalcCard>\r\n    )\r\n})\r\n\r\nexport default TripType\r\n","export const COUNTRIES = [\r\n    {id: 1, text: 'Австралия'},\r\n    {id: 2, text: 'Австрия'},\r\n    {id: 3, text: 'Азербайджан'},\r\n    {id: 4, text: 'Азорские острова'},\r\n    {id: 5, text: 'Аландские острова'},\r\n    {\r\n        id: 6,\r\n        text: 'Албания',\r\n    },\r\n    {id: 7, text: 'Алжир'},\r\n    {id: 8, text: 'Американские Виргинские острова'},\r\n    {\r\n        id: 9,\r\n        text: 'Американское Самоа',\r\n    },\r\n    {id: 10, text: 'Ангилья'},\r\n    {id: 11, text: 'Ангола'},\r\n    {id: 12, text: 'Андорра'},\r\n    {\r\n        id: 13,\r\n        text: 'Антигуа и Барбуда',\r\n    },\r\n    {id: 14, text: 'Аргентина'},\r\n    {id: 15, text: 'Армения'},\r\n    {id: 16, text: 'Аруба'},\r\n    {\r\n        id: 17,\r\n        text: 'Афганистан',\r\n    },\r\n    {id: 18, text: 'Багамы'},\r\n    {id: 19, text: 'Бангладеш'},\r\n    {id: 20, text: 'Барбадос'},\r\n    {\r\n        id: 21,\r\n        text: 'Бахрейн',\r\n    },\r\n    {id: 22, text: 'Белиз'},\r\n    {id: 23, text: 'Белоруссия'},\r\n    {id: 24, text: 'Бельгия'},\r\n    {\r\n        id: 25,\r\n        text: 'Бенин',\r\n    },\r\n    {id: 26, text: 'Бермуды'},\r\n    {id: 27, text: 'Болгария'},\r\n    {id: 28, text: 'Боливия'},\r\n    {\r\n        id: 29,\r\n        text: 'Босния и Герцеговина (БиГ)',\r\n    },\r\n    {id: 30, text: 'Ботсвана'},\r\n    {id: 31, text: 'Бразилия'},\r\n    {\r\n        id: 32,\r\n        text: 'Британская территория в Индийском океане',\r\n    },\r\n    {id: 33, text: 'Британские Виргинские острова'},\r\n    {id: 34, text: 'Бруней'},\r\n    {\r\n        id: 35,\r\n        text: 'Буркина Фасо (бывшая Верхняя Вольта)',\r\n    },\r\n    {id: 36, text: 'Бурунди'},\r\n    {id: 37, text: 'Бутан'},\r\n    {id: 38, text: 'Вануату'},\r\n    {\r\n        id: 39,\r\n        text: 'Ватикан',\r\n    },\r\n    {id: 40, text: 'Великобритания'},\r\n    {id: 41, text: 'Венгрия'},\r\n    {id: 42, text: 'Венесуэла'},\r\n    {\r\n        id: 43,\r\n        text: 'Восточный Тимор',\r\n    },\r\n    {id: 44, text: 'Вьетнам'},\r\n    {id: 45, text: 'Габон'},\r\n    {id: 46, text: 'Гавайи'},\r\n    {\r\n        id: 47,\r\n        text: 'Гайана',\r\n    },\r\n    {id: 48, text: 'Гаити'},\r\n    {id: 49, text: 'Гамбия'},\r\n    {id: 50, text: 'Гана'},\r\n    {\r\n        id: 51,\r\n        text: 'Гваделупа',\r\n    },\r\n    {id: 52, text: 'Гватемала'},\r\n    {id: 53, text: 'Гвиана - Французская Гвиана'},\r\n    {\r\n        id: 54,\r\n        text: 'Гвинея',\r\n    },\r\n    {id: 55, text: 'Гвинея-Бисау'},\r\n    {id: 56, text: 'Германия'},\r\n    {id: 57, text: 'Гернси'},\r\n    {\r\n        id: 58,\r\n        text: 'Гибралтар',\r\n    },\r\n    {id: 59, text: 'Гондурас'},\r\n    {id: 60, text: 'Гонконг (Сянган)'},\r\n    {id: 61, text: 'Гренада'},\r\n    {\r\n        id: 62,\r\n        text: 'Гренландия',\r\n    },\r\n    {id: 63, text: 'Греция'},\r\n    {id: 64, text: 'Грузия'},\r\n    {id: 65, text: 'Гуам'},\r\n    {\r\n        id: 66,\r\n        text: 'Дания',\r\n    },\r\n    {id: 67, text: 'Джерси'},\r\n    {id: 68, text: 'Джибути'},\r\n    {id: 69, text: 'Доминика'},\r\n    {\r\n        id: 70,\r\n        text: 'Доминиканская Республика',\r\n    },\r\n    {id: 71, text: 'ДР Конго'},\r\n    {id: 72, text: 'Египет'},\r\n    {id: 73, text: 'Замбия'},\r\n    {\r\n        id: 74,\r\n        text: 'Зимбабве',\r\n    },\r\n    {id: 75, text: 'Йемен'},\r\n    {id: 76, text: 'Израиль'},\r\n    {id: 77, text: 'Индия'},\r\n    {\r\n        id: 78,\r\n        text: 'Индонезия',\r\n    },\r\n    {id: 79, text: 'Иордания'},\r\n    {id: 80, text: 'Ирак'},\r\n    {id: 81, text: 'Иран'},\r\n    {\r\n        id: 82,\r\n        text: 'Ирландия',\r\n    },\r\n    {id: 83, text: 'Исландия'},\r\n    {id: 84, text: 'Испания'},\r\n    {id: 85, text: 'Италия'},\r\n    {\r\n        id: 86,\r\n        text: 'Кабо-Верде',\r\n    },\r\n    {id: 87, text: 'Казахстан'},\r\n    {id: 88, text: 'Каймановы острова'},\r\n    {id: 89, text: 'Камбоджа'},\r\n    {\r\n        id: 90,\r\n        text: 'Камерун',\r\n    },\r\n    {id: 91, text: 'Канада'},\r\n    {id: 92, text: 'Катар'},\r\n    {id: 93, text: 'Кения'},\r\n    {\r\n        id: 94,\r\n        text: 'Кипр',\r\n    },\r\n    {id: 95, text: 'Киргизия'},\r\n    {id: 96, text: 'Кирибати'},\r\n    {id: 97, text: 'Китай'},\r\n    {\r\n        id: 98,\r\n        text: 'Китай (Тайвань)',\r\n    },\r\n    {id: 99, text: 'КНДР'},\r\n    {id: 100, text: 'Кокосовые острова'},\r\n    {id: 101, text: 'Колумбия'},\r\n    {\r\n        id: 102,\r\n        text: 'Коморы',\r\n    },\r\n    {id: 103, text: 'Коста-Рика'},\r\n    {id: 104, text: 'Кот-д’Ивуар'},\r\n    {id: 105, text: 'Куба'},\r\n    {\r\n        id: 106,\r\n        text: 'Кувейт',\r\n    },\r\n    {id: 107, text: 'Лаос'},\r\n    {id: 108, text: 'Латвия'},\r\n    {id: 109, text: 'Лесото'},\r\n    {\r\n        id: 110,\r\n        text: 'Либерия',\r\n    },\r\n    {id: 111, text: 'Ливан'},\r\n    {id: 112, text: 'Ливия'},\r\n    {id: 113, text: 'Литва'},\r\n    {\r\n        id: 114,\r\n        text: 'Лихтенштейн',\r\n    },\r\n    {id: 115, text: 'Люксембург'},\r\n    {id: 116, text: 'Маврикий'},\r\n    {id: 117, text: 'Мавритания'},\r\n    {\r\n        id: 118,\r\n        text: 'Мадагаскар',\r\n    },\r\n    {id: 119, text: 'Мадейра'},\r\n    {id: 120, text: 'Майотта'},\r\n    {id: 121, text: 'Макао'},\r\n    {\r\n        id: 122,\r\n        text: 'Малави',\r\n    },\r\n    {id: 123, text: 'Малайзия'},\r\n    {id: 124, text: 'Мали'},\r\n    {id: 125, text: 'Мальдивы'},\r\n    {\r\n        id: 126,\r\n        text: 'Мальта',\r\n    },\r\n    {id: 127, text: 'Марокко'},\r\n    {id: 128, text: 'Мартиника'},\r\n    {\r\n        id: 129,\r\n        text: 'Маршалловы Острова',\r\n    },\r\n    {id: 130, text: 'Мексика'},\r\n    {id: 131, text: 'Мозамбик'},\r\n    {id: 132, text: 'Молдавия'},\r\n    {\r\n        id: 133,\r\n        text: 'Монако',\r\n    },\r\n    {id: 134, text: 'Монголия'},\r\n    {id: 135, text: 'Монтсеррат'},\r\n    {id: 136, text: 'Мьянма'},\r\n    {\r\n        id: 137,\r\n        text: 'Нагорно-Карабахская Республика',\r\n    },\r\n    {id: 138, text: 'Намибия'},\r\n    {id: 139, text: 'Науру'},\r\n    {id: 140, text: 'Непал'},\r\n    {\r\n        id: 141,\r\n        text: 'Нигер',\r\n    },\r\n    {id: 142, text: 'Нигерия'},\r\n    {id: 143, text: 'Нидерландские Антильские острова'},\r\n    {\r\n        id: 144,\r\n        text: 'Нидерланды',\r\n    },\r\n    {id: 145, text: 'Никарагуа'},\r\n    {id: 146, text: 'Ниуэ'},\r\n    {id: 147, text: 'Новая Зеландия'},\r\n    {\r\n        id: 148,\r\n        text: 'Новая Каледония',\r\n    },\r\n    {id: 149, text: 'Норвегия'},\r\n    {id: 150, text: 'ОАЭ (Объединённые Арабские Эмираты)'},\r\n    {\r\n        id: 151,\r\n        text: 'Оман',\r\n    },\r\n    {id: 152, text: 'Остров Мэн'},\r\n    {id: 153, text: 'Остров Норфолк'},\r\n    {\r\n        id: 154,\r\n        text: 'Остров Рождества',\r\n    },\r\n    {id: 155, text: 'Остров Святой Елены'},\r\n    {id: 156, text: 'Острова Кука'},\r\n    {\r\n        id: 157,\r\n        text: 'Острова Питкэрн',\r\n    },\r\n    {id: 158, text: 'Пакистан'},\r\n    {id: 159, text: 'Палау'},\r\n    {id: 160, text: 'Палестина'},\r\n    {\r\n        id: 161,\r\n        text: 'Панама',\r\n    },\r\n    {id: 162, text: 'Папуа — Новая Гвинея'},\r\n    {id: 163, text: 'Парагвай'},\r\n    {\r\n        id: 164,\r\n        text: 'Перу — Республика Перу',\r\n    },\r\n    {id: 165, text: 'Польша'},\r\n    {id: 166, text: 'Португалия'},\r\n    {\r\n        id: 167,\r\n        text: 'Приднестровская Молдавская Республика',\r\n    },\r\n    {id: 168, text: 'Пуэрто-Рико'},\r\n    {id: 169, text: 'Абхазия'},\r\n    {\r\n        id: 170,\r\n        text: 'Республика Конго',\r\n    },\r\n    {id: 171, text: 'Корея'},\r\n    {id: 172, text: 'Косово'},\r\n    {id: 173, text: 'Македония'},\r\n    {\r\n        id: 174,\r\n        text: 'Реюньон',\r\n    },\r\n    // {id: 175, text: 'Россия'},\r\n    {id: 176, text: 'Руанда'},\r\n    {id: 177, text: 'Румыния'},\r\n    {\r\n        id: 178,\r\n        text: 'Сальвадор',\r\n    },\r\n    {id: 179, text: 'Самоа'},\r\n    {id: 180, text: 'Сан-Марино'},\r\n    {\r\n        id: 181,\r\n        text: 'Сан-Томе и Принсипи',\r\n    },\r\n    {id: 182, text: 'Саудовская Аравия'},\r\n    {\r\n        id: 183,\r\n        text: 'Сахарская Арабская Демократическая Республика',\r\n    },\r\n    {id: 184, text: 'Свазиленд'},\r\n    {id: 185, text: 'Северные Марианские острова'},\r\n    {\r\n        id: 186,\r\n        text: 'Сейшельские Острова',\r\n    },\r\n    {id: 187, text: 'Сенегал'},\r\n    {id: 188, text: 'Сен-Пьер и Микелон'},\r\n    {\r\n        id: 189,\r\n        text: 'Сент-Винсент и Гренадины',\r\n    },\r\n    {id: 190, text: 'Сент-Китс и Невис'},\r\n    {id: 191, text: 'Сент-Люсия'},\r\n    {\r\n        id: 192,\r\n        text: 'Сербия',\r\n    },\r\n    {id: 193, text: 'Силенд'},\r\n    {id: 194, text: 'Сингапур'},\r\n    {id: 195, text: 'Сирия'},\r\n    {\r\n        id: 196,\r\n        text: 'Словакия',\r\n    },\r\n    {id: 197, text: 'Словения'},\r\n    {id: 198, text: 'Соломоновы Острова'},\r\n    {\r\n        id: 199,\r\n        text: 'Сомали',\r\n    },\r\n    {id: 200, text: 'Сомалиленд'},\r\n    {id: 201, text: 'Судан'},\r\n    {id: 202, text: 'Суринам'},\r\n    {\r\n        id: 203,\r\n        text: 'США',\r\n    },\r\n    {id: 204, text: 'Соединенные Штаты Америки'},\r\n    {id: 205, text: 'Сьерра-Леоне'},\r\n    {\r\n        id: 206,\r\n        text: 'Таджикистан',\r\n    },\r\n    {id: 207, text: 'Таиланд'},\r\n    {id: 208, text: 'Танзания'},\r\n    {id: 209, text: 'Тёркс и Кайкос'},\r\n    {\r\n        id: 210,\r\n        text: 'Того',\r\n    },\r\n    {id: 211, text: 'Токелау'},\r\n    {id: 212, text: 'Тонга'},\r\n    {id: 213, text: 'Тринидад и Тобаго'},\r\n    {\r\n        id: 214,\r\n        text: 'Тувалу',\r\n    },\r\n    {id: 215, text: 'Тунис'},\r\n    {id: 216, text: 'Турецкая Республика Северного Кипра'},\r\n    {\r\n        id: 217,\r\n        text: 'Туркмения',\r\n    },\r\n    {id: 218, text: 'Турция'},\r\n    {id: 219, text: 'Уганда'},\r\n    {id: 220, text: 'Узбекистан'},\r\n    {\r\n        id: 221,\r\n        text: 'Украина',\r\n    },\r\n    {id: 222, text: 'Уоллис и Футуна'},\r\n    {id: 223, text: 'Уругвай'},\r\n    {\r\n        id: 224,\r\n        text: 'Фарерские острова',\r\n    },\r\n    {id: 225, text: 'Федеративные Штаты Микронезии'},\r\n    {id: 226, text: 'Фиджи'},\r\n    {\r\n        id: 227,\r\n        text: 'Филиппины',\r\n    },\r\n    {id: 228, text: 'Финляндия'},\r\n    {id: 229, text: 'Фолклендские острова'},\r\n    {\r\n        id: 230,\r\n        text: 'Франция',\r\n    },\r\n    {id: 231, text: 'Французская Полинезия'},\r\n    {\r\n        id: 232,\r\n        text: 'Французские Южные и Антарктические Территории',\r\n    },\r\n    {id: 233, text: 'Хорватия'},\r\n    {id: 234, text: 'ЦАР'},\r\n    {id: 235, text: 'Чад'},\r\n    {\r\n        id: 236,\r\n        text: 'Черногория',\r\n    },\r\n    {id: 237, text: 'Чехия'},\r\n    {id: 238, text: 'Чили'},\r\n    {id: 239, text: 'Швейцария'},\r\n    {\r\n        id: 240,\r\n        text: 'Швеция',\r\n    },\r\n    {id: 241, text: 'Шпицберген'},\r\n    {id: 242, text: 'Шри-Ланка'},\r\n    {id: 243, text: 'Эквадор'},\r\n    {\r\n        id: 244,\r\n        text: 'Экваториальная Гвинея',\r\n    },\r\n    {id: 245, text: 'Эстония'},\r\n    {id: 246, text: 'Эфиопия'},\r\n    {id: 247, text: 'ЮАР'},\r\n    {\r\n        id: 248,\r\n        text: 'Южная Георгия и Южные Сандвичевы острова',\r\n    },\r\n    {id: 249, text: 'Южная Осетия'},\r\n    {id: 250, text: 'Япония'},\r\n    {id: 251, text: 'Эритрея'},\r\n    {\r\n        id: 252,\r\n        text: 'Ямайка',\r\n    },\r\n    {id: 175, text: 'Только РФ'},\r\n    {id: 254, text: 'Страны шенгенского союза'},\r\n    {\r\n        id: 255,\r\n        text: 'Весь мир, исключая США и Канаду',\r\n    },\r\n]\r\n","export const EURO_ONLY = [\r\n    2,\r\n    24,\r\n    27,\r\n    40,\r\n    41,\r\n    56,\r\n    63,\r\n    66,\r\n    82,\r\n    84,\r\n    85,\r\n    94,\r\n    108,\r\n    113,\r\n    114,\r\n    115,\r\n    126,\r\n    144,\r\n    149,\r\n    165,\r\n    166,\r\n    173,\r\n    177,\r\n    180,\r\n    192,\r\n    196,\r\n    197,\r\n    228,\r\n    230,\r\n    233,\r\n    236,\r\n    237,\r\n    239,\r\n    240,\r\n    241,\r\n    245,\r\n    254,\r\n]\r\n","import GlobalOptionsInterface from '../types/global-options'\r\n\r\nconst defaultGlobalOptions: GlobalOptionsInterface = {\r\n    rootNodeId: '',\r\n    code: '',\r\n    dinamyc: {\r\n        test: false,\r\n    },\r\n}\r\n\r\nexport default defaultGlobalOptions\r\n","const IDS = {\r\n    COUNTRIES: 'countries',\r\n    MULTI: 'multi',\r\n    PERIOD_MULTI: 'periodMulti',\r\n    PERIOD_START_DATE: 'periodStartDate',\r\n    PERIOD_END_DATE: 'periodEndDate',\r\n    NUMBER_OF_DAYS: 'numberOfDays',\r\n    CURRENCY: 'currency',\r\n    INSURANCE_SUM: 'insuranceSum',\r\n    SPORTS: 'sports',\r\n    SECOND_PROGRAMS: 'secondPrograms',\r\n    PROMOCODE: 'promocode',\r\n    PROMOCODE_OR_BONUSES: 'promocodeOrBonuses',\r\n    BONUSES: 'bonuses',\r\n    INSUREDS: 'insureds',\r\n    BIRTHDAY: 'birthday',\r\n    FIRST_NAME: 'firstName',\r\n    LAST_NAME: 'lastName',\r\n    MIDDLE_NAME: 'middleName',\r\n    ADDRESS: 'address',\r\n    INSURANT: 'insurant',\r\n    INSURANT_EMAIL: ['insurant', 'email'],\r\n    INSURANT_PHONE: ['insurant', 'phone'],\r\n    INSURANT_ADDRESS: ['insurant', 'address'],\r\n    INSURANT_PASSPORT_SERIAL: ['insurant', 'passportSerial'],\r\n    INSURANT_PASSPORT_NUMBER: ['insurant', 'passportNumber'],\r\n    INSURANT_PASSPORT_DATE_OF_ISSUE: ['insurant', 'passportDateOfIssue'],\r\n    INSURANT_FIRST_NAME: ['insurant', 'firstName'],\r\n    INSURANT_LAST_NAME: ['insurant', 'lastName'],\r\n    INSURANT_MIDDLE_NAME: ['insurant', 'middleName'],\r\n    INSURANT_BIRTHDAY: ['insurant', 'birthday'],\r\n    PASSPORT_SERIAL: 'passportSerial',\r\n    PASSPORT_NUMBER: 'passportNumber',\r\n    OPTIONS: 'options',\r\n    ASSISTANCE: 'assistance',\r\n    COVID: 'covid',\r\n    AGREEMENT_WITH_RULES: 'agreementWithRules',\r\n    AGREEMENT_WITH_PROTECTION_POLICY: 'agreementWithProtectionPolicy',\r\n    INSURED_IS_INSURANT_ID: 'insuredIsInsurantId',\r\n}\r\n\r\nexport default IDS\r\n","import * as moment from 'moment'\r\ndeclare const ENV_IS_DEV: boolean\r\n\r\nexport const COMPONENT_SIZE = 'large'\r\nexport const POSSIBLE_PERIODS_MULTI = [30, 60, 90, 180, 365]\r\nexport const MIN_START_DATE = moment({h: 0, m: 0, s: 0, ms: 0}).add(2, 'days')\r\nexport const MAX_NUMBER_OF_INSURED = 5\r\nexport const INSURANCE_SUMS = [35000, 50000]\r\nexport const INSURANCE_SUMS_RUS = [350000, 700000]\r\nexport const BONUS_COVERAGE_PERCENT = 20\r\nexport const RF_ONLY_ID = 175\r\nexport const URL_RULES =\r\n    'https://www.euro-ins.ru/wp-content/uploads/pravila/3-1-Pravila_strah_VZR.pdf'\r\nexport const URL_PROGRAM = 'https://euro-ins.ru/calc/files/program_main.pdf'\r\nexport const URL_USER_AGREEMENT =\r\n    'https://euro-ins.ru/calc/files/user_agreement.pdf'\r\n\r\nexport const HEADER_STEPS = [\r\n    {\r\n        name: 'Параметры поездки',\r\n    },\r\n    {\r\n        name: 'Наполнение',\r\n    },\r\n    {\r\n        name: 'Данные и оплата',\r\n    },\r\n    {\r\n        name: 'Проверка телефона',\r\n    },\r\n]\r\n\r\nexport const POST = 'POST'\r\nexport const HEADERS = new Headers([['Content-Type', 'application/json']])\r\nexport const DOMEN = ENV_IS_DEV\r\n    ? 'https://api.euro-ins.ru'\r\n    : 'https://api.euro-ins.ru'\r\nexport const URL_GET_COST = `${DOMEN}/vzr/policy/price`\r\nexport const URL_CREATE_POLICY = `${DOMEN}/vzr/policy/create`\r\nexport const URL_GET_PAY_URL = `${DOMEN}/vzr/policy/get_pay_url`\r\nexport const URL_GET_ASSISTANCES = `https://euro-ins.ru/api/vzr/assistances/get`\r\nexport const URL_GET_SPORTS = `https://euro-ins.ru/api/vzr/sports/list`\r\n","// import InitValuesInterface from '../types/init-values'\r\nimport IDS from './ids'\r\nimport * as moment from 'moment'\r\nimport {INSURANCE_SUMS} from './index'\r\n\r\nlet INIT_VALUES: any = {\r\n    [IDS.COUNTRIES]: [],\r\n    [IDS.MULTI]: false,\r\n    [IDS.PERIOD_MULTI]: null,\r\n    [IDS.PERIOD_START_DATE]: null,\r\n    [IDS.PERIOD_END_DATE]: null,\r\n    [IDS.NUMBER_OF_DAYS]: 5,\r\n    // todo - надо внутри калька расчитывать исходя из даты начала и даты окончания\r\n\r\n    [IDS.CURRENCY]: 'USD',\r\n    [IDS.INSURANCE_SUM]: INSURANCE_SUMS[0],\r\n    [IDS.SPORTS]: [],\r\n\r\n    [IDS.INSUREDS]: [\r\n        {\r\n            [IDS.BIRTHDAY]: null,\r\n            [IDS.LAST_NAME]: '',\r\n            [IDS.FIRST_NAME]: '',\r\n            [IDS.PASSPORT_SERIAL]: '',\r\n            [IDS.PASSPORT_NUMBER]: '',\r\n        },\r\n    ],\r\n\r\n    [IDS.OPTIONS]: {\r\n        [IDS.ASSISTANCE]: 'express',\r\n        [IDS.COVID]: false,\r\n    },\r\n    [IDS.PROMOCODE_OR_BONUSES]: 'bonuses',\r\n    [IDS.BONUSES]: 0,\r\n    [IDS.AGREEMENT_WITH_RULES]: false,\r\n    [IDS.AGREEMENT_WITH_PROTECTION_POLICY]: false,\r\n    [IDS.INSURANT]: {\r\n        [IDS.LAST_NAME]: '',\r\n        [IDS.FIRST_NAME]: '',\r\n        [IDS.MIDDLE_NAME]: '',\r\n        [IDS.BIRTHDAY]: null,\r\n        [IDS.ADDRESS]: '',\r\n        [IDS.PASSPORT_SERIAL]: '',\r\n        [IDS.PASSPORT_NUMBER]: '',\r\n    },\r\n    [IDS.INSURED_IS_INSURANT_ID]: null,\r\n}\r\n\r\nif (ENV_IS_DEV) {\r\n    INIT_VALUES = {\r\n        ...INIT_VALUES,\r\n        [IDS.COUNTRIES]: [175],\r\n        //     [IDS.MULTI]: false,\r\n        //     [IDS.PERIOD_MULTI]: null,\r\n        [IDS.PERIOD_START_DATE]: moment().add(20, 'days'),\r\n        [IDS.PERIOD_END_DATE]: moment().add(24, 'days'),\r\n        //     [IDS.NUMBER_OF_DAYS]: 5, // todo - надо внутри калька расчитывать исходя из даты начала и даты окончания\r\n        //\r\n        //     [IDS.CURRENCY]: 'USD',\r\n        //     [IDS.INSURANCE_SUM]: INSURANCE_SUMS[0],\r\n        //     [IDS.SPORTS]: [],\r\n        //\r\n        [IDS.INSUREDS]: [\r\n            {\r\n                // [IDS.BIRTHDAY]: null,\r\n                [IDS.BIRTHDAY]: moment('2000-01-01'),\r\n                [IDS.LAST_NAME]: 'ZTESTOV 1',\r\n                [IDS.FIRST_NAME]: 'ZTEST 1',\r\n                [IDS.PASSPORT_SERIAL]: '11',\r\n                [IDS.PASSPORT_NUMBER]: '111111',\r\n            },\r\n        ],\r\n        //\r\n        //     [IDS.OPTIONS]: {\r\n        //         [IDS.ASSISTANCE]: 'express',\r\n        //     },\r\n        //     [IDS.PROMOCODE_OR_BONUSES]: 'bonuses',\r\n        //     [IDS.BONUSES]: 0,\r\n        //     [IDS.AGREEMENT_WITH_RULES]: false,\r\n        //     [IDS.AGREEMENT_WITH_PROTECTION_POLICY]: false,\r\n        //     [IDS.INSURANT]: {\r\n        //         [IDS.LAST_NAME]: 'Тестов',\r\n        //         [IDS.FIRST_NAME]: 'Тест',\r\n        //         [IDS.MIDDLE_NAME]: 'Тестович',\r\n        //         [IDS.BIRTHDAY]: moment('1999-01-01'),\r\n        //         [IDS.ADDRESS]: 'Тестовый адрес',\r\n        //         [IDS.PASSPORT_SERIAL]: '4444',\r\n        //         [IDS.PASSPORT_NUMBER]: '555555',\r\n        //     },\r\n    }\r\n}\r\n\r\nexport default INIT_VALUES\r\n","const LABELS = {\r\n    PERIOD_START_DATE: 'С',\r\n    PERIOD_END_DATE: 'По',\r\n    SPORTS: 'Выберите вид спорта, если планируете активный отдых',\r\n    PROMOCODE: 'Введите промокод',\r\n    BIRTHDAY: 'Дата рождения',\r\n    FIRST_NAME: 'Имя',\r\n    LAST_NAME: 'Фамилия',\r\n    MIDDLE_NAME: 'Отчество',\r\n    PHONE: 'Телефон',\r\n    EMAIL: 'Электронная почта',\r\n    SERIAL: 'Серия',\r\n    NUMBER: 'Номер',\r\n    ADDRESS: 'Адрес',\r\n}\r\n\r\nexport default LABELS\r\n","const PROMOCODES = [\r\n    {\r\n        promocode: 'isic',\r\n        partnerCode: 'MTAwMTEwMDE1MDAwMDM1',\r\n    },\r\n]\r\n\r\nexport default PROMOCODES\r\n","const SECOND_PROGRAMS = [\r\n    {\r\n        id: 'liability',\r\n        name: 'Гражданская ответственность',\r\n        sums: [12000, 25000],\r\n    },\r\n    {\r\n        id: 'accident',\r\n        name: 'Несчастный случай',\r\n        sums: [3000, 5000, 10000],\r\n    },\r\n    {\r\n        id: 'baggage',\r\n        name: 'Утрата багажа',\r\n        sums: [500, 1000, 1500],\r\n    },\r\n]\r\n\r\nexport default SECOND_PROGRAMS\r\n\r\nexport const SECOND_PROGRAMS_RUS = [\r\n    {\r\n        id: 'liability',\r\n        name: 'Гражданская ответственность',\r\n        sums: [200000, 500000],\r\n    },\r\n    {\r\n        id: 'accident',\r\n        name: 'Несчастный случай',\r\n        sums: [100000, 200000, 350000, 700000],\r\n    },\r\n    {\r\n        id: 'baggage',\r\n        name: 'Утрата багажа',\r\n        sums: [35000, 70000],\r\n    },\r\n]\r\n","import GlobalOptionsInterface from '../types/global-options'\r\n\r\nconst bonusesSystemUsed = (globalOptions: GlobalOptionsInterface): boolean => {\r\n    return !!(\r\n        (window.location.hostname === 'lk.euro-ins.ru' ||\r\n            window.location.hostname === 'euro-ins.lh') &&\r\n        globalOptions.bonuses &&\r\n        globalOptions.clientIsn\r\n    )\r\n}\r\n\r\nexport default bonusesSystemUsed\r\n","import {FormInstance} from 'antd/lib/form'\r\nimport IDS from '../constants/ids'\r\n\r\nconst resetInsuredIsInsurant = (form: FormInstance) => {\r\n    form.setFieldsValue({\r\n        [IDS.INSURED_IS_INSURANT_ID]: null,\r\n        [IDS.INSURANT]: {\r\n            [IDS.LAST_NAME]: '',\r\n            [IDS.FIRST_NAME]: '',\r\n            [IDS.MIDDLE_NAME]: '',\r\n            [IDS.BIRTHDAY]: null,\r\n            [IDS.PASSPORT_SERIAL]: '',\r\n            [IDS.PASSPORT_NUMBER]: '',\r\n        },\r\n    })\r\n}\r\n\r\nexport default resetInsuredIsInsurant\r\n","import {useForm} from 'antd/lib/form/Form'\r\nimport {useCallback, useMemo, useState} from 'react'\r\nimport validator from '../classes/validator'\r\nimport extractor from '../classes/extractor'\r\nimport GlobalOptionsInterface from '../types/global-options'\r\nimport Api from '../classes/api'\r\nimport {\r\n    createErrorState,\r\n    createInitialState,\r\n    createStartedState,\r\n    createSuccessState,\r\n} from '../../../../common/helpers/create-request-state'\r\nimport CostInfoInterface from '../types/models/cost-info'\r\nimport CostStateType from '../types/state/cost-state'\r\nimport GetPaymentLinkRequestInterface from '../types/requests/get-payment-link'\r\nimport PolicyInfoInterface from '../types/models/policy-info'\r\nimport PolicyStateType from '../types/state/policy-state'\r\nimport PaymentLinkStateType from '../types/state/payment-link-state'\r\nimport PaymentLinkInfoInterface from '../types/models/payment-link-info'\r\nimport useSteps from '../../../common/hooks/use-steps'\r\nimport bonusesSystemUsed from '../helpers/bonuses-system-used'\r\nimport {log} from '../../../../common/helpers/console/log'\r\n\r\ninterface UseControllerArgsInterface {\r\n    globalOptions: GlobalOptionsInterface\r\n}\r\n\r\nconst costInitState = createInitialState<CostInfoInterface>(),\r\n    policyInitState = createInitialState<PolicyInfoInterface>(),\r\n    paymentLinkInitState = createInitialState<PaymentLinkInfoInterface>()\r\n\r\nconst useController = ({globalOptions}: UseControllerArgsInterface) => {\r\n    const [form] = useForm(),\r\n        {currentStep, prevStep, nextStep} = useSteps(),\r\n        [cost, setCost] = useState<CostStateType>(costInitState),\r\n        [policy, setPolicy] = useState<PolicyStateType>(policyInitState),\r\n        [paymentLink, setPaymentLink] = useState<PaymentLinkStateType>(\r\n            paymentLinkInitState\r\n        ),\r\n        bonusesSystemIsOn = useMemo(() => bonusesSystemUsed(globalOptions), []),\r\n        /*\r\n            Пересчет стоимости,\r\n            поля должны быть валидны!\r\n         */\r\n        recalculate = useCallback(async () => {\r\n            // Сразу устанавливаем флаг, о начале запроса стоимости\r\n            setCost(createStartedState())\r\n            try {\r\n                // Извлекаем данные для получения стоимости\r\n                const data = extractor.extractDataForGetCost(),\r\n                    result = await Api.getCost(data)\r\n                // Проверяем результат запроса\r\n                if ('errors' in result) throw new Error(result.errors.join())\r\n                setCost(createSuccessState(result))\r\n                return true\r\n            } catch (e) {\r\n                setCost(createErrorState([e.message]))\r\n                console.error(e)\r\n                return false\r\n            }\r\n        }, []),\r\n        /*\r\n            Обработчик перехода с первого на второй шаг\r\n            Параметры поездки -> Наполнение\r\n         */\r\n        fromFirstToSecondStep = useCallback(async e => {\r\n            console.log('fromFirstToSecondStep')\r\n            e.preventDefault()\r\n            const validationStatus = await validator.validateFirstStep()\r\n            if (validationStatus === 'error') return\r\n            // Сразу устанавливаем флаг, о начале запроса стоимости\r\n            setCost(createStartedState())\r\n            const isSuccess = await recalculate()\r\n            if (isSuccess) nextStep()\r\n        }, []),\r\n        /*\r\n            Обработчик перехода со второго на третий шаг\r\n            Наполнение -> Данные и оплата\r\n         */\r\n        fromSecondToThirdStep = useCallback(async e => {\r\n            console.log('fromSecondToThirdStep')\r\n            e.preventDefault()\r\n            const validationStatus = await validator.validateSecondStep()\r\n            if (validationStatus === 'error') return\r\n            const isSuccess = await recalculate()\r\n            if (isSuccess) nextStep()\r\n        }, []),\r\n        /*\r\n            Обработчик перехода с третьего на четвертый шаг\r\n            Данные и оплата -> Проверка телефона\r\n         */\r\n        fromThirdToFourthStep = useCallback(async e => {\r\n            console.log('fromThirdToFourthStep')\r\n            e.preventDefault()\r\n            const validationStatus = await validator.validateThirdStep()\r\n            if (validationStatus === 'error') return\r\n            nextStep()\r\n        }, []),\r\n        /*\r\n            Обработчик перехода с четвертого на пятый шаг\r\n            Проверка телефона -> Оплата\r\n         */\r\n        fromFourthToFifthStep = useCallback(async e => {\r\n            log('fromFourthToFifthStep')\r\n            const validationStatus = await validator.validateFourthStep()\r\n            if (validationStatus === 'error') return\r\n\r\n            setPolicy(createStartedState())\r\n            const dataForCreate = extractor.extractDataForCreate()\r\n            log('Извлечены данные для создания полиса ', dataForCreate)\r\n            const creationResult = await Api.createPolicy(dataForCreate)\r\n\r\n            if ('errors' in creationResult)\r\n                return setPolicy(createErrorState(creationResult.errors))\r\n\r\n            setPolicy(createSuccessState(creationResult))\r\n\r\n            setPaymentLink(createStartedState())\r\n            const dataForGetPaymentLink: GetPaymentLinkRequestInterface = {\r\n                    id: creationResult.id,\r\n                    code: dataForCreate.code,\r\n                },\r\n                gettingResult = await Api.getPaymentLink(dataForGetPaymentLink)\r\n\r\n            if ('errors' in gettingResult)\r\n                return setPaymentLink(createErrorState(gettingResult.errors))\r\n\r\n            if (ENV_IS_DEV) {\r\n                if (confirm('Перейти на оплату?'))\r\n                    window.location.href = gettingResult.data.url\r\n            } else {\r\n                window.location.href = gettingResult.data.url\r\n            }\r\n        }, []),\r\n        handleNextClick = useCallback(\r\n            e => {\r\n                if (currentStep === 0) return fromFirstToSecondStep(e)\r\n                if (currentStep === 1) return fromSecondToThirdStep(e)\r\n                if (currentStep === 2) return fromThirdToFourthStep(e)\r\n                if (currentStep === 3) return fromFourthToFifthStep(e)\r\n            },\r\n            [currentStep]\r\n        )\r\n\r\n    validator.setForm(form)\r\n    extractor.setForm(form)\r\n    extractor.setGlobalOptions(globalOptions)\r\n    extractor.setBonusesSystemIsOn(bonusesSystemIsOn)\r\n\r\n    return {\r\n        form,\r\n        currentStep,\r\n        cost,\r\n        policy,\r\n        paymentLink,\r\n        prevStep,\r\n        recalculate,\r\n        bonusesSystemIsOn,\r\n        handleNextClick,\r\n    }\r\n}\r\n\r\nexport default useController\r\n","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport GlobalOptionsInterface from './types/global-options'\r\nimport ConfigProvider from 'antd/lib/config-provider'\r\nimport * as moment from 'moment'\r\nimport ru_RU from 'antd/es/locale/ru_RU'\r\nimport App from './components/app'\r\nimport mergeDeep from '../../../common/helpers/merge-deep'\r\nimport defaultGlobalOptions from './constants/global-options'\r\n\r\ndeclare const window\r\ndeclare const ENV_IS_DEV: boolean\r\n\r\nwindow.TravelCalculator = class TravelCalculator {\r\n    constructor(nodeId: string, initOptions: GlobalOptionsInterface) {\r\n        const globalOptions = mergeDeep({}, initOptions, defaultGlobalOptions)\r\n\r\n        ReactDOM.render(\r\n            <ConfigProvider locale={ru_RU}>\r\n                <App globalOptions={{...globalOptions, rootNodeId: nodeId}} />\r\n            </ConfigProvider>,\r\n            document.getElementById(nodeId)\r\n        )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {Moment} from 'moment'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport * as InputMask from 'react-input-mask'\r\nimport './index.less'\r\nimport * as moment from 'moment'\r\n\r\n// Если меняется маска то меняем и формат!\r\nconst dateFormat: string = 'DD.MM.YYYY',\r\n    mask: string = '99.99.9999'\r\n\r\ninterface DatePropsInterface {\r\n    id?: any\r\n    size: 'small' | 'default'\r\n    value?: Moment | undefined\r\n    onChange?: (date: Moment) => void\r\n    onBlur?: () => void\r\n    disabled?: boolean\r\n}\r\n\r\ninterface DateStateInterface {\r\n    value: string\r\n}\r\n\r\nexport default class Date extends React.Component<\r\n    DatePropsInterface,\r\n    DateStateInterface\r\n> {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: props.value ? props.value.format(dateFormat) : '__.__.____',\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        size: 'large',\r\n        disabled: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps({value}, state) {\r\n        if (value && state.value !== value.format(dateFormat)) {\r\n            return {\r\n                value: value.format(dateFormat),\r\n            }\r\n        } else if (\r\n            state.value.indexOf('_') === -1 &&\r\n            (value === null || value === undefined)\r\n        ) {\r\n            return {\r\n                value: '',\r\n            }\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    changeValue = e => {\r\n        if (e.type === 'change') {\r\n            const {onChange} = this.props\r\n\r\n            if (moment(e.target.value, dateFormat, true).isValid())\r\n                onChange(moment(e.target.value, dateFormat))\r\n            else onChange(null)\r\n\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {disabled, onBlur} = this.props,\r\n            {value} = this.state\r\n\r\n        return (\r\n            <InputMask\r\n                mask={mask}\r\n                value={value}\r\n                onChange={this.changeValue}\r\n                disabled={disabled}\r\n                onBlur={onBlur}\r\n            >\r\n                {props => (\r\n                    <Input\r\n                        {...props}\r\n                        size={this.props.size}\r\n                        className='e-date-mask'\r\n                        disabled={disabled}\r\n                    />\r\n                )}\r\n            </InputMask>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react'\r\nimport {Component} from 'react'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport * as InputMask from 'react-input-mask'\r\n\r\ninterface PhonePropsInterface {\r\n    size?: string\r\n    disabled?: boolean\r\n    onChange?: (e: any) => () => void\r\n}\r\n\r\ninterface PhoneStateInterface {\r\n    value: string\r\n}\r\n\r\nclass Phone extends Component<PhonePropsInterface, PhoneStateInterface> {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            value: props.value || '+7 (___) ___-__-__',\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        size: 'large',\r\n        disabled: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        if ('value' in nextProps) {\r\n            return {\r\n                ...(nextProps.value || {}),\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    changeValue = e => {\r\n        if (e.type === 'change') {\r\n            this.setState(\r\n                {value: e.target.value},\r\n                this.props.onChange(e.target.value)\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {disabled} = this.props,\r\n            {value} = this.state\r\n\r\n        return (\r\n            <InputMask\r\n                mask='+7 (999) 999-99-99'\r\n                value={value}\r\n                onChange={this.changeValue}\r\n                disabled={disabled}\r\n            >\r\n                {props => (\r\n                    <Input\r\n                        {...props}\r\n                        type={'tel'}\r\n                        size={this.props.size}\r\n                        disabled={disabled}\r\n                    />\r\n                )}\r\n            </InputMask>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Phone\r\n","import * as React from 'react'\r\nimport {FC} from 'react'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Phone from '../../custom-form-components/phone'\r\nimport * as moment from 'moment'\r\n\r\ninterface PhonePropsInterface {\r\n    name?: string | string[]\r\n    size?: string\r\n    disabled?: boolean\r\n}\r\n\r\nconst {Item} = Form,\r\n    validator = async (r, v) => {\r\n        if (!v || ~v.indexOf('_')) return Promise.reject('Введите телефон')\r\n        return Promise.resolve()\r\n    }\r\n\r\nconst PhoneItem: FC<PhonePropsInterface> = ({\r\n    name = 'phone',\r\n    size,\r\n    disabled,\r\n}) => {\r\n    return (\r\n        <Item name={name} label={'Телефон'} rules={[{validator}]} required>\r\n            <Phone size={size} disabled={disabled} />\r\n        </Item>\r\n    )\r\n}\r\n\r\nexport default PhoneItem\r\n","// extracted by mini-css-extract-plugin","import * as React from 'react'\r\nimport {FC, memo} from 'react'\r\nimport {Row, Col} from 'antd/lib/grid'\r\nimport 'antd/lib/grid/style'\r\nimport Form from 'antd/lib/form'\r\nimport 'antd/lib/form/style'\r\nimport Input from 'antd/lib/input'\r\nimport 'antd/lib/input/style'\r\nimport Date from '../custom-form-components/date'\r\nimport './index.less'\r\nimport {STANDART_ITEM_RULES} from '../../../calcs/common/constants'\r\n\r\nconst {Item} = Form\r\n\r\ninterface PassportDataPropsInterface {\r\n    namespace?: string\r\n    showHeading?: string\r\n    disablesSerial?: boolean\r\n    disablesNumber?: boolean\r\n    disabled?: boolean\r\n}\r\n\r\nconst PassportData: FC<PassportDataPropsInterface> = memo(\r\n    ({\r\n        namespace,\r\n        showHeading = true,\r\n        disabled = false,\r\n        disablesSerial = false,\r\n        disablesNumber = false,\r\n    }) => {\r\n        let serialName: string | string[] = 'passportSerial',\r\n            numberName: string | string[] = 'passportNumber',\r\n            dateOfIssueName: string | string[] = 'passportDateOfIssue'\r\n\r\n        if (namespace) {\r\n            serialName = [namespace, serialName]\r\n            numberName = [namespace, numberName]\r\n            dateOfIssueName = [namespace, dateOfIssueName]\r\n        }\r\n\r\n        return (\r\n            <Row gutter={{sm: 8, md: 16, xl: 24}}>\r\n                {showHeading && (\r\n                    <Col xs={24} sm={24}>\r\n                        <h3>Паспортные данные</h3>\r\n                    </Col>\r\n                )}\r\n                <Col>\r\n                    <Row>\r\n                        <Col className={'e-passport-data__serial-col'}>\r\n                            <Item\r\n                                name={serialName}\r\n                                label={'Серия'}\r\n                                rules={STANDART_ITEM_RULES}\r\n                                required\r\n                            >\r\n                                <Input\r\n                                    className={'e-passport-data__serial'}\r\n                                    size={'large'}\r\n                                    disabled={disabled || disablesSerial}\r\n                                />\r\n                            </Item>\r\n                        </Col>\r\n                        <Col className={'e-passport-data__number-col'}>\r\n                            <Item\r\n                                name={numberName}\r\n                                label={'Номер'}\r\n                                rules={STANDART_ITEM_RULES}\r\n                                required\r\n                            >\r\n                                <Input\r\n                                    className={'e-passport-data__number'}\r\n                                    size={'large'}\r\n                                    disabled={disabled || disablesNumber}\r\n                                />\r\n                            </Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Item\r\n                        name={dateOfIssueName}\r\n                        label={'Дата выдачи'}\r\n                        rules={STANDART_ITEM_RULES}\r\n                        required\r\n                    >\r\n                        <Date disabled={disabled} />\r\n                    </Item>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n)\r\n\r\nexport default PassportData\r\n","declare const ENV_IS_DEV: boolean\r\n\r\nexport function log(...params) {\r\n    if (ENV_IS_DEV) console.log(...params)\r\n}\r\n","import {RequestStateInterface} from '../types/state/request'\r\n\r\nexport const createInitialState = <T>(): RequestStateInterface<T> => {\r\n    return {\r\n        requestStatus: 'didNotLoad',\r\n        errorMessage: '',\r\n        data: null,\r\n    }\r\n}\r\n\r\nexport const createStartedState = <T>(\r\n    data: T = null\r\n): RequestStateInterface<T> => {\r\n    return {\r\n        requestStatus: 'started',\r\n        errorMessage: '',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const createErrorState = <T>(\r\n    errors: string[]\r\n): RequestStateInterface<T> => {\r\n    return {\r\n        requestStatus: 'error',\r\n        errorMessage: errors.join(', '),\r\n        data: null,\r\n    }\r\n}\r\n\r\nexport const createSuccessState = <T>(data: T): RequestStateInterface<T> => {\r\n    return {\r\n        requestStatus: 'success',\r\n        errorMessage: '',\r\n        data,\r\n    }\r\n}\r\n","/**\r\n * Делит целые числа по тысячам через пробел 5000 -> 5 000\r\n */\r\nexport default number =>\r\n    (number + '')\r\n        .split('')\r\n        .reverse()\r\n        .join('')\r\n        .match(/.{1,3}/g)\r\n        .join(' ')\r\n        .split('')\r\n        .reverse()\r\n        .join('')\r\n","import notification from 'antd/lib/notification'\r\nimport 'antd/lib/notification/style'\r\n\r\nconst handleInputOnlyEnglish = e => {\r\n    // 65 & 90 включительно (диапозон кодов больших английских букв)\r\n    const val = e.target.value,\r\n        newVal = val.toUpperCase(),\r\n        charCode = newVal.charCodeAt(val.length - 1)\r\n    // todo - вывести подсказку\r\n    if (charCode > 64 && charCode < 91) return newVal\r\n    else {\r\n        notification.info({\r\n            message: 'Пожалуйста, переключите язык на клавиатуре',\r\n        })\r\n        return newVal.substr(0, newVal.length - 1)\r\n    }\r\n}\r\n\r\nexport default handleInputOnlyEnglish\r\n","import notification from 'antd/lib/notification'\r\nimport 'antd/lib/notification/style'\r\n\r\nconst handleInputOnlyRussian = e => {\r\n    // 65 & 90 включительно (диапозон кодов больших английских букв)\r\n    const val = e.target.value,\r\n        charCode = val.charCodeAt(val.length - 1)\r\n\r\n    if (\r\n        (charCode > 1039 && charCode < 1104) ||\r\n        charCode === 1025 ||\r\n        charCode === 1105\r\n    )\r\n        return val\r\n    else {\r\n        notification.info({\r\n            message: 'Пожалуйста, переключите язык на клавиатуре',\r\n        })\r\n        return val.substr(0, val.length - 1)\r\n    }\r\n}\r\n\r\nexport default handleInputOnlyRussian\r\n","function isObject(obj) {\r\n    return obj !== null && typeof obj === 'object'\r\n}\r\n\r\nfunction isPlainObject(obj) {\r\n    return (\r\n        isObject(obj) &&\r\n        (obj.constructor === Object || obj.constructor === undefined)\r\n    )\r\n}\r\n\r\nexport default function mergeDeep(target, ...sources) {\r\n    if (!sources.length) return target\r\n    const source = sources.shift()\r\n\r\n    if (Array.isArray(target)) {\r\n        if (Array.isArray(source)) {\r\n            target.push(...source)\r\n        } else {\r\n            target.push(source)\r\n        }\r\n    } else if (isPlainObject(target)) {\r\n        if (isPlainObject(source)) {\r\n            for (let key of Object.keys(source)) {\r\n                if (!target[key]) {\r\n                    target[key] = source[key]\r\n                } else {\r\n                    mergeDeep(target[key], source[key])\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(`Cannot merge object with non-object`)\r\n        }\r\n    } else {\r\n        target = source\r\n    }\r\n\r\n    return mergeDeep(target, ...sources)\r\n}\r\n","export default class RangeIterator implements Iterable<number> {\r\n    constructor(public from: number, public to: number) {}\r\n\r\n    [Symbol.iterator]() {\r\n        const from = this.from,\r\n            to = this.to\r\n        let current = undefined\r\n\r\n        return {\r\n            next(): {done: boolean; value: number} {\r\n                if (current === undefined) {\r\n                    // инициализация состояния итерации\r\n                    current = from\r\n                }\r\n                if (current <= to) {\r\n                    return {\r\n                        done: false,\r\n                        value: current++,\r\n                    }\r\n                } else {\r\n                    // очистка текущей итерации\r\n                    current = undefined\r\n                    return {\r\n                        done: true,\r\n                        value: null,\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    }\r\n}\r\n","import * as moment from 'moment'\r\n\r\nconst isAdultValidator = async (r, v) => {\r\n    if (!v) return Promise.reject('Введите дату')\r\n    if (moment().diff(v, 'years') < 18)\r\n        return Promise.reject('Должен быть совершеннолетним')\r\n    return Promise.resolve()\r\n}\r\n\r\nexport default isAdultValidator\r\n","const requiredTrueCheckboxValidator = (r, v) => {\r\n    if (!v) return Promise.reject('Поставьте галочку')\r\n    return Promise.resolve()\r\n}\r\n\r\nexport default requiredTrueCheckboxValidator\r\n","const useUrlParams = <T>(): T => {\r\n    return window.location.search\r\n        .replace('?', '') //! знаки ? строго как разделители\r\n        .split('&')\r\n        .reduce((prevValue, curValue) => {\r\n            const param = curValue.split('=')\r\n            prevValue[param[0]] = param[1]\r\n            return prevValue\r\n        }, {}) as T\r\n}\r\n\r\nexport default useUrlParams\r\n","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}